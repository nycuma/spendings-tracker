{"version":3,"sources":["utils/Constants.js","utils/LocalStore.js","utils/Utils.js","Header.js","utils/Contexts.js","dashboard/TooltipAmountDay.js","dashboard/Calender.js","dashboard/AddForm.js","dashboard/tiles/SpendingsToday.js","dashboard/tiles/SpendingsSingleDay.js","dashboard/tiles/TotalSpendings.js","dashboard/tiles/CategoriesPieChart.js","dashboard/tiles/RecentHistory.js","dashboard/tiles/RecurrentSpendings.js","dashboard/Tiles.js","Dashboard.js","Analytics.js","Settings.js","Sidebar.js","Main.js","registerServiceWorker.js","index.js"],"names":["Constants","LOCALE_DECIMAL_OPTIONS","style","minimumFractionDigits","maximumFractionDigits","DATE_FORMAT","DATE_FORMAT_SHORT","DATE_FORMAT_INPUT","FIRST_DAY_WEEK","TIME_UNITS","CURRENCIES","name","code","symbol","LOCALES","DEFAULT_CURRENCY_OPTIONS","currency","DEFAULT_LOCALE","DEFAULT_CURRENCY","DEFAULT_CATEGORIES","label","value","descr","color","KEY_SPENDINGS","getSpendings","date","onlySameWeek","onlySameMonth","onlySameYear","data","store","get","arguments","length","filter","item","Utils","isSameDay","Date","day","isSameWeek","weekStartsOn","isSameMonth","getFullYear","getSpendingsRecentlyAdded","count","slice","reverse","getAmountSpentByCategory","categories","map","cat","amountByCat","amount","reduce","prev","next","Math","round","loadCurrency","loadLocale","loadCategories","getRecurrentSpendings","TEMPLATES","food","share","items","comment","min","max","coffeeshop","household","culture","clothes","transport","gifts","getNumDaysOfMonth","numDays","getMonth","isLeapYear","filterSpendingsByCategory","spendings","category","calculateTotalAmountByCategory","prevAmount","nextAmount","calculateSumOfSpendings","date1","date2","getDate","dateInEachWeek","dateFrom","dateTo","dates","dateToEnd","endOfWeek","isBefore","push","addWeeks","dateInEachMonth","endOfMonth","addMonths","dateInEachYear","endOfYear","addYears","generateRandomData","startDate","endDate","randomSpendings","i","rand","random","catKeys","Object","keys","accumulatedProb","j","this","createRandomSpending","spendingsArray","set","concat","toConsumableArray","saveSpendings","getRandomDate","start","end","getRandomIndex","floor","getRandomAmount","index","id","uuidv4","dateAdded","Header","today","someTimeAgo","subMonths","react_default","a","createElement","className","onClick","dist","PreferenceContext","React","createContext","locale","updateCurrency","updateLocale","addCategory","removeCategory","TooltipAmountDay","props","Consumer","_ref","toLocaleString","objectSpread","Calender","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","daysWithSpendings","getDaysWithSpendings","modifiers","e","dayState","top","pageY","left","pageX","setState","defineProperty","display","spendingsMonth","selectedDay","forEach","spending","_this2","weekend","daysOfWeek","dayWithSpending","values","tooltips","dashboard_TooltipAmountDay","key","DayPicker_default","todayButton","firstDayOfWeek","modifiersStyles","backgroundColor","fontWeight","onDayClick","updateSelectedDay","onDayMouseEnter","mod","displayAmountSpent","onDayMouseLeave","hideAmountSpent","onMonthChange","updateDaysWithSpendings","openAddModal","openImportModal","Component","SpendingsForm","nodeRef","createRef","handleClickOutideForm","bind","assertThisInitialized","valDay","initDay","valCategory","valAmount","valComment","showParsingError","document","addEventListener","removeEventListener","current","contains","target","onClose","dateFnsFormat","replace","preventDefault","parseFloat","isNaN","addSpendingsPosition","handleFormInput","styleErrorTooltip","ref","type","onChange","handleDay","handleCategory","border","handleAmount","maxLength","handleComment","handleFormInputAndClose","SpendingsToday","catExpandedView","initStateObject","stateExpandedView","updatedCatState","spendingsToday","amountSpent","arrowClass","currencyOptions","toggleDisplayAllPositionsForCat","renderSpendingsPositons","_this3","spendingPositions","displayExpanded","_this4","totalToday","title","toggleDisplay","renderTableBody","SpendingsSingleDay","nextProps","spendingsForDay","calculateTotalAmountPerCategory","getSpendingsPositionByCat","totalAmountDay","TotalSpendings","totalAmountToday","totalAmountWeek","totalAmountMonth","totalAmountYear","CategoriesPieChart","chartData","pieColors","substring","PieChart","width","height","Pie","cx","cy","isAnimationActive","outerRadius","fill","labelLine","dataKey","nameKey","entry","Cell","Legend","layout","align","verticalAlign","iconType","iconSize","RecentHistory","entries","recentSpendings","pos","RecurrentSpendings","rs","interval","tbleHead","Tiles","catPieChart","spendingsSingleDay","totalSpendings","recentHistory","recurrentSpendings","tile","tiles_CategoriesPieChart","tiles_SpendingsToday","tiles_TotalSpendings","tiles_RecentHistory","tiles_SpendingsSingleDay","tiles_RecurrentSpendings","Dashboard","handleFileUpload","addFormIsVisible","fileSelector","initFileSelector","localStore","setAttribute","onchange","newSpending","month","totalAmounts","Array","click","files","reader","FileReader","onload","json","JSON","parse","result","onerror","err","console","log","readAsText","dashboard_Tiles","getTotalAmountDay","getTotalAmountWeek","getTotalAmountMonth","getTotalAmountYear","getSpendingsForSelectedDay","src_dashboard_Calender","dashboard_AddForm","contextType","Analytics","unit","subYears","dataTotals","updateChart","startOf","endOf","dateFormat","datesEach","eachDay","startOfDay","endOfDay","startOfWeek","startOfMonth","startOfYear","undefined","dateStart","dateEnd","getSpendingsBetween","total","optionsUnits","handleUnit","handleDate1","handleDate2","BarChart","margin","right","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Bar","Settings","curr","localeOptions","loc","categoryTbl","rowSpan","Sidebar","displayTitleDashboard","displayTitleAnalytics","displayTitleSettings","distanceTop","window","handleSidebarPosition","scrollTop","documentElement","body","stateItem","onMouseEnter","toggleNavTitle","onMouseLeave","Link","to","Main","cats","newVal","catValue","findIndex","copy","splice","src_Header","src_Sidebar","Provider","Switch","Route","exact","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","HashRouter","src_Main","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f7210622.chunk.js","sourcesContent":["export const Constants = {\n    LOCALE_DECIMAL_OPTIONS: { \n        style: 'decimal', \n        minimumFractionDigits: 2, \n        maximumFractionDigits: 2 \n    },\n    DATE_FORMAT: 'DD MMM YYYY',\n    DATE_FORMAT_SHORT: 'DD.MM.YYYY',\n    DATE_FORMAT_INPUT: 'YYYY-MM-DD',\n    FIRST_DAY_WEEK: 1, // 0: Sunday, 1: Monday\n    TIME_UNITS: ['day', 'week', 'month', 'year'],\n    \n    CURRENCIES: [\n        { name: 'Euro', code: 'EUR', symbol: '€' },\n        { name: 'US Dollar', code: 'USD', symbol: '$' },\n        { name: 'British Pound', code: 'GBP', symbol: '£' }\n    ],\n    LOCALES: ['de-DE', 'en-US', 'en-UK'],\n\n    DEFAULT_CURRENCY_OPTIONS: {\n        style: 'currency',\n        currency: 'EUR',\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n    },\n    DEFAULT_LOCALE: 'de-DE',\n    DEFAULT_CURRENCY: 'EUR',\n    DEFAULT_CATEGORIES: [{ label: 'Food', value: 'food', descr: '', color: '#7E6258' },\n        { label: 'Coffee Shops, Bars & Restaurants', value: 'coffeeshop', descr: '', color: '#3EAC9A' },\n        { label: 'Household', value: 'household', descr: '', color: '#AC633E' },\n        { label: 'Culture', value: 'culture', descr: '', color: '#58747E' },\n        { label: 'Clothes', value: 'clothes', descr: '', color: '#3EAC63' },\n        { label: 'Transport', value: 'transport', descr: '', color: '#7E7558' },\n        { label: 'Gifts & Donations', value: 'gifts', descr: '', color: '#AC9A3E' }]\n};\n","/**\n * Fetching data from local storage\n */\nimport uuidv4 from 'uuid/v4';\nimport store from 'store';\nimport Utils from './Utils';\nimport { isSameWeek, isSameMonth } from 'date-fns';\nimport { Constants } from './Constants';\n\nconst KEY_SPENDINGS = 'spendings';\nconst KEY_CATEGORIES = 'categories';\nconst KEY_CURRENCY = 'currency';\nconst KEY_LOCALE = 'locale';\nconst KEY_RECURRENT_SPENDINGS = 'recurrentSpending';\n\n /**\n  * Returns spending positons that were spent on the same day / in the same year, month,\n  * or week as the reference date.\n  * If no parameter is given, all spendings will be returned.\n  * If only date is given, all spendings from the same day will be returned.\n  * \n  * @param {Date} date reference date\n  * @param {Boolean} onlySameWeek \n  * @param {Boolean} onlySameMonth \n  * @param {Boolean} onlySameYear \n  */\n export function getSpendings(date, onlySameWeek, onlySameMonth, onlySameYear) {\n    let data = store.get(KEY_SPENDINGS);\n    if(!data) { \n        return []; \n    }\n\n    if(arguments.length === 0) {\n        return data;\n    }\n\n    if(arguments.length === 1) {\n        return data.filter(item => Utils.isSameDay(new Date(item.day), date));\n    }\n\n    if(onlySameWeek === true) {\n        return data.filter(item => isSameWeek(new Date(item.day), date, { weekStartsOn: Constants.FIRST_DAY_WEEK }));\n    }\n\n    if(onlySameMonth === true) {\n        return data.filter(item => isSameMonth(new Date(item.day), date));\n    }\n\n    if(onlySameYear === true) {\n        return data.filter(item => new Date(item.day).getFullYear() === date.getFullYear());\n    }\n\n    return data;\n}\n\n/**\n * Returns spendings postions after and/or before a certain date.\n * If neither start date nor end date is specified, an empty array is returned.\n * \n * @param {Date} dateStart (optional)\n * @param {Date} dateEnd (optinal)\n * @param {String} category (optional)\n * @param {Number} count number of positions that should be returned (optional)\n */\nexport const getSpendingsBetween = (dateStart, dateEnd, category, count) => {\n    if(!dateStart && !dateEnd) { \n        return []; \n    }\n    let data = store.get(KEY_SPENDINGS);\n    if(!data) { \n        return []; \n    }\n\n    if(dateStart) {\n        data = data.filter(item => new Date(item.day) >= dateStart);\n    }\n\n    if(dateEnd) {\n        data = data.filter(item => new Date(item.day) <= dateEnd);\n    }\n\n    if(category) {\n        data = data.filter(item => item.cat === category);\n    }\n\n    return count ? data.slice(0, count) : data;\n};\n\n/**\n * Returns most recently added spending positions, descending order.\n * \n * @param {Number} count Number of positions to return\n */\nexport const getSpendingsRecentlyAdded = (count) => {\n    const data = store.get(KEY_SPENDINGS);\n    if(!data) { \n        return []; \n    }\n    // return elements from the end of the array\n    return data.slice(-count).reverse();\n};\n\n/**\n * Returns array with total amount spent on each categorie all time.\n * // TODO move to utils\n */\nexport const getAmountSpentByCategory = (categories) => {\n    if(!categories || categories.length === 0) {\n        return [];\n    }\n\n    const data = store.get(KEY_SPENDINGS);\n    if(!data) { \n        return []; \n    }\n\n    return categories.map(cat => {\n        let amountByCat = data.filter(item => item.cat === cat.value)\n                              .map(item => item.amount)\n                              .reduce((prev, next) => prev + next, 0);\n        return {\n            cat: cat.value,\n            amount: Math.round(amountByCat)\n        };\n    });\n};\n\n\nexport const postSpendingPosition = (pos) => {\n    let data = store.get(KEY_SPENDINGS);\n    if(!data) { \n        data = []; \n    }\n    data.push({\n        id: pos.id ? pos.id : uuidv4(),\n        day: pos.day,\n        cat: pos.cat,\n        amount: pos.amount,\n        comment: pos.comment,\n        dateAdded: pos.dateAdded ? pos.dateAdded : new Date()\n    });\n    \n    store.set(KEY_SPENDINGS, data);\n};\n\nexport const saveSpendings = (spendingsArray) => {\n    let data = store.get(KEY_SPENDINGS);\n    if(!data) { \n        data = []; \n    }\n    store.set(KEY_SPENDINGS, [...data, ...spendingsArray]);\n};\n\nexport const loadCurrency = () => {\n    return store.get(KEY_CURRENCY);\n};\n\nexport const saveCurrency = (currency) => {\n    store.set(KEY_CURRENCY, currency);\n};\n\nexport const loadLocale = () => {\n    return store.get(KEY_LOCALE);\n};\n\nexport const saveLocale = (locale) => {\n    store.set(KEY_LOCALE, locale);\n};\n\nexport const loadCategories = () => {\n    return store.get(KEY_CATEGORIES);\n};\n\nexport const saveCategories = (cats) => {\n    store.set(KEY_CATEGORIES, cats);\n};\n\nexport const getRecurrentSpendings = () => {\n    const recSpendings = store.get(KEY_RECURRENT_SPENDINGS);\n    if(!recSpendings) { \n        return []; \n    }\n};\n\nexport const postRecurrentSpending = (recurrentSpending) => {\n    let recSpendings = store.get(KEY_RECURRENT_SPENDINGS);\n    if(!recSpendings) { \n        recSpendings = []; \n    }\n    recSpendings.push({\n        startDate: recurrentSpending.startDate ? recurrentSpending.startDate : new Date(),\n        interval: recurrentSpending.interval,\n        amount: recurrentSpending.amount,\n        cat: recurrentSpending.cat,\n        comment: recurrentSpending.comment\n    });\n    \n    store.set(KEY_RECURRENT_SPENDINGS, recurrentSpending);\n};","import isLeapYear from 'date-fns/is_leap_year';\nimport uuidv4 from 'uuid/v4';\nimport addMonths from 'date-fns/add_months';\nimport { saveSpendings } from './LocalStore';\nimport { endOfMonth, isBefore, endOfWeek, addWeeks, endOfYear, addYears } from 'date-fns';\n\n// Used for generating some random spendings\nconst TEMPLATES = {\n    food: { \n        share: 0.25,\n        items: [\n            { comment: 'Groceries', min: 3, max: 100 },\n            { comment: 'Drinks', min: 2, max: 30 },\n            { comment: 'Döner', min: 2.50, max: 5 }\n        ]\n    },\n    coffeeshop: { \n        share: 0.2,\n        items: [\n            { comment: 'Coffee', min: 1, max: 2.50 },\n            { comment: 'Coffee & cake', min: 4, max: 8 },\n            { comment: 'Capuccino', min: 2.50, max: 3.50 },\n            { comment: 'Drink at bar', min: 3, max: 10 }\n        ]\n    },\n    household: { \n        share: 0.2,\n        items: [\n            { comment: 'Bicycle repair', min: 50, max: 100 },\n            { comment: 'Vacuum cleaner bags', min: 5, max: 20 },\n            { comment: 'Detergents', min: 1, max: 10 },\n            { comment: 'Bed linen', min: 10, max: 50 },\n            { comment: 'Cosmetics', min: 0.5, max: 10 },\n            { comment: 'Toothbrush', min: 1, max: 3 },\n            { comment: 'Bank fees', min: 1, max: 5 }\n        ]\n    },\n    culture: { \n        share: 0.1,\n        items: [\n            { comment: 'Book', min: 2, max: 25 },\n            { comment: 'Cinema', min: 5, max: 9 },\n            { comment: 'Theater', min: 8, max: 40 },\n            { comment: 'Library membership', min: 10, max: 15 }\n        ]\n    },\n    clothes: {\n        share: 0.05,\n        items: [\n            { comment: 'Present', min: 5, max: 50 },\n            { comment: 'Donation', min: 5, max: 50 }\n        ]\n    },\n    transport: {\n        share: 0.15,\n        items: [\n            { comment: 'Public transport ticket', min: 1.30, max: 5.40 },\n            { comment: 'Train ticket', min: 5, max: 70 },\n            { comment: 'Flight', min: 30, max: 100 },\n            { comment: 'Petrol', min: 10, max: 50 }\n        ]\n    },\n    gifts: {\n        share: 0.05,\n        items: [\n            { comment: 'Present', min: 5, max: 50 },\n            { comment: 'Donation', min: 5, max: 50 }\n        ]\n    }\n};\n\nlet Utils = {\n\n    getNumDaysOfMonth(date) {\n        let numDays;\n        switch(date.getMonth()) {\n            case 0: case 2: case 4: case 6: case 7: case 9: case 11:\n                numDays = 31;\n                break;\n            case 3: case 5: case 8: case 10:\n                numDays = 30;\n                break;\n            case 1: \n                numDays = isLeapYear(date) ? 29 : 28;\n                break;\n            default:\n                numDays = 31;\n        }\n        return numDays;\n    },\n\n    /**\n     * Filters array of spending positions by their category.\n     * @param {Array} spendings objects with spending positions\n     * @param {String} category \n     */\n    filterSpendingsByCategory(spendings, category) {\n        if(!spendings || spendings.length === 0) {\n            return [];\n        }\n        return spendings.filter(item => item.cat === category); \n    },\n\n    calculateTotalAmountByCategory(spendings, category) {\n        if(!spendings || spendings.length === 0) {\n            return 0;\n        }\n\n        return spendings.filter(item => item.cat === category)\n                        .map(item => item.amount)\n                        .reduce((prevAmount, nextAmount) => prevAmount + nextAmount, 0);  \n    },\n\n    calculateSumOfSpendings(spendings) {\n        if(!spendings || spendings.length === 0) {\n            return 0;\n        }\n        return spendings.map(item => item.amount).reduce((prev, next) => prev + next, 0);\n    },\n\n    isSameDay(date1, date2) {\n        return date1.getFullYear() === date2.getFullYear() \n                && date1.getMonth() === date2.getMonth()\n                && date1.getDate() === date2.getDate();\n    },\n\n    dateInEachWeek(dateFrom, dateTo) {\n        let dates = [];\n        let dateToEnd = endOfWeek(dateTo);\n        while(isBefore(dateFrom, dateToEnd)) {\n            dates.push(dateFrom);\n            dateFrom = addWeeks(dateFrom, 1);\n        }\n        return dates;\n    },\n\n    dateInEachMonth(dateFrom, dateTo) {\n        let dates = [];\n        let dateToEnd = endOfMonth(dateTo);\n        while(isBefore(dateFrom, dateToEnd)) {\n            dates.push(dateFrom);\n            dateFrom = addMonths(dateFrom, 1);\n        }\n        return dates;\n    },\n\n    dateInEachYear(dateFrom, dateTo) {\n        let dates = [];\n        let dateToEnd = endOfYear(dateTo);\n        while(isBefore(dateFrom, dateToEnd)) {\n            dates.push(dateFrom);\n            dateFrom = addYears(dateFrom, 1);\n        }\n        return dates;\n    },\n\n    /**\n     * Generates and saves random spendings within a given time span.\n     * Currently works only with default categories!\n     * \n     * // TODO generalise code for any categories\n     * // TODO Save data in state/global store\n     * \n     * @param {Number} count number of spendings to be generated\n     * @param {Date} startDate start of time span\n     * @param {Date} endDate end of time span\n     */\n    generateRandomData(count, startDate, endDate) {\n        let randomSpendings = [];\n        for(let i = 0; i < count; i++) {\n            const rand = Math.random();\n            const catKeys = Object.keys(TEMPLATES);\n            let accumulatedProb = 0; // accumulate shares of categories\n\n            for(let j = 0; j < catKeys.length; j++) {\n                accumulatedProb += TEMPLATES[catKeys[j]].share;\n                if(rand < accumulatedProb) {\n                    // generate spending for current category\n                    randomSpendings.push(this.createRandomSpending(catKeys[j], startDate, endDate));\n                    break;\n                }   \n            }\n        }\n\n        // save in local storage\n        saveSpendings(randomSpendings);\n    },\n\n    /**\n     * Calculates and returns a random date in a given time span.\n     * @param {Date} start earlierst date of time span\n     * @param {Date} end latest date of time span\n     */\n    getRandomDate(start, end) {\n        return new Date(+start + Math.random() * (end - start));\n    },\n\n    /**\n     * Generates and returns random array index \n     * (= an integer form 0 to arrray.length).\n     * @param {Number} length of array\n     */\n    getRandomIndex(length) {\n        return Math.floor(Math.random() * length);\n    },\n\n    /**\n     * Generates random decimal number between min and max.\n     * @param {Number} min \n     * @param {Number} max \n     */\n    getRandomAmount(min, max) {\n        return (Math.random() * (max - min)) + min;\n    },\n\n    createRandomSpending(category, startDate, endDate) {\n        let index = this.getRandomIndex(TEMPLATES[category].items.length);\n        let item = TEMPLATES[category].items[index];\n        return {\n            id: uuidv4(),\n            day: this.getRandomDate(startDate, endDate),\n            cat: category,\n            amount: this.getRandomAmount(TEMPLATES[category].items[index].min, TEMPLATES[category].items[index].max),\n            comment: item.comment,\n            dateAdded: new Date()\n        };\n    }\n};\n\nexport default Utils;","import React from 'react';\nimport { Box } from 'react-feather';\nimport subMonths from 'date-fns/sub_months';\nimport Utils from './utils/Utils';\n\nfunction Header() {\n    const today = new Date();\n    const someTimeAgo = subMonths(today, 3);\n\n    return (\n        <header>   \n            <div className=\"wrapper-generate-btn\">\n                <button id=\"generate-btn\" onClick={() => Utils.generateRandomData(150, someTimeAgo, today)}>Generate random data</button>\n                <span className=\"btn-sub-title\">Requires page reload (TODO)</span>\n            </div>\n            <Box className=\"nav-icon nav-icon\" /> \n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport { Constants } from './Constants';\n\nexport const PreferenceContext = React.createContext({\n    currency: Constants.DEFAULT_CURRENCY,\n    locale: Constants.DEFAULT_LOCALE,\n    categories: Constants.DEFAULT_CATEGORIES,\n    updateCurrency: () => {},\n    updateLocale: () => {},\n    addCategory: () => {},\n    removeCategory: () => {}\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Constants } from '../utils/Constants';\nimport './TooltipAmountDay.scss';\nimport { PreferenceContext } from '../utils/Contexts';\n\n/**\n * Displays amount spent on a day when hovering over specific day\n * in the DayPicker\n */\nfunction TooltipAmountDay(props)  {\n    return (\n        <PreferenceContext.Consumer>\n        {({ currency, locale }) => (\n            <div className=\"hover-total-amount-day\" style={props.style}>\n                {props.amount.toLocaleString(locale, { ...Constants.DEFAULT_CURRENCY_OPTIONS, ...{ currency: currency }})}\n            </div>\n        )}\n        </PreferenceContext.Consumer>\n    ); \n}\n\nTooltipAmountDay.propTypes = {\n    style: PropTypes.object.isRequired,\n    amount: PropTypes.number.isRequired\n};\n\nexport default TooltipAmountDay;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DayPicker from 'react-day-picker';\nimport TooltipAmountDay from './TooltipAmountDay';\nimport { Constants } from '../utils/Constants';\nimport { getSpendings } from './../utils/LocalStore';\nimport './Calender.scss';\nimport 'react-day-picker/lib/style.css';\n\n\nclass Calender extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            daysWithSpendings: this.getDaysWithSpendings()\n        };\n    }\n\n    displayAmountSpent(day, modifiers, e) {\n        day = day.getDate();\n        const dayState = this.state.daysWithSpendings[day];\n        if(dayState) {\n            dayState.style = { top: e.pageY, left: e.pageX-50 };\n            this.setState({ daysWithSpendings: {...this.state.daysWithSpendings, ...{ [day]: dayState } } });\n        }\n    }\n\n    hideAmountSpent(day) {\n        day = day.getDate();\n        const dayState = this.state.daysWithSpendings[day];\n        if(dayState) {\n            dayState.style = { display: 'none' };\n            this.setState({ daysWithSpendings: {...this.state.daysWithSpendings, ...{ [day]: dayState } } });\n        }\n    }\n\n    getDaysWithSpendings(date) {\n        date = date ? date : this.props.selectedDay;\n        // get all spendings of current month\n        const spendingsMonth = getSpendings(date, false, true, true);\n        // get all days on which sth. was spent in this month and add up amounts\n        const daysWithSpendings = {};\n        spendingsMonth.forEach(spending => {\n            const day = new Date(spending.day).getDate();\n            if(!daysWithSpendings[day]) {\n                daysWithSpendings[day] = { \n                    date: new Date(spending.day),\n                    amount: spending.amount,\n                    style: { display: 'none' } \n                };\n            } else {\n                daysWithSpendings[day].amount += spending.amount;\n            }\n        });\n\n        return daysWithSpendings;\n    }\n\n    updateDaysWithSpendings(date) {\n        this.setState({ daysWithSpendings: this.getDaysWithSpendings(date) });\n    }\n\n    render() {\n        const modifiers = {\n            weekend: { daysOfWeek: [6, 0] },\n            today: new Date(),\n            selectedDay: this.props.selectedDay,\n            dayWithSpending: Object.values(this.state.daysWithSpendings).map(item => item.date)\n        };\n        const modifiersStyles = {\n            today : {\n                color: '#58747E'\n            },\n            weekend: {\n                color: '#7E6258'\n            },\n            selectedDay: {\n                color: 'white',\n                backgroundColor: '#7E6258',\n            },\n            dayWithSpending: {\n                fontWeight: 'bold'\n            }\n        };\n\n\n        const tooltips = Object.keys(this.state.daysWithSpendings).map(day =>\n            (<TooltipAmountDay \n                key={day} \n                amount={this.state.daysWithSpendings[day].amount} \n                style={this.state.daysWithSpendings[day].style} \n            />)\n        );\n\n        return (\n            <div id=\"calender\" className=\"box\">\n                <DayPicker\n                    todayButton=\"Today\"\n                    firstDayOfWeek={Constants.FIRST_DAY_WEEK}\n                    modifiers={modifiers}\n                    modifiersStyles={modifiersStyles}\n                    onDayClick={this.props.updateSelectedDay}\n                    onDayMouseEnter={(day, mod, e) => this.displayAmountSpent(day, mod, e)}\n                    onDayMouseLeave={(day, mod, e) => this.hideAmountSpent(day, mod, e)} \n                    onMonthChange={(date) => this.updateDaysWithSpendings(date)}\n                />\n\n                <div>\n                    {tooltips}\n                </div>\n\n                <div className=\"box add-actions\">\n                    <span className=\"add-action\" onClick={this.props.openAddModal}>\n                        <button className=\"add-pos-btn\">+</button> \n                        Add spending\n                    </span>\n                    <span className=\"add-action\" onClick={this.props.openImportModal}>\n                        <button className=\"add-pos-btn\">+</button>\n                        Import from JSON\n                    </span>\n                </div> \n            </div>  \n        );\n    }\n}\n\nCalender.propTypes = {\n    selectedDay: PropTypes.instanceOf(Date).isRequired,\n    updateSelectedDay: PropTypes.func.isRequired,\n    openAddModal: PropTypes.func.isRequired,\n    openImportModal: PropTypes.func.isRequired\n};\n\nexport default Calender;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dateFnsFormat from 'date-fns/format';\nimport { Constants } from '../utils/Constants';\nimport './AddForm.scss';\n\nclass SpendingsForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.nodeRef = React.createRef();\n        this.handleClickOutideForm = this.handleClickOutideForm.bind(this);\n        this.state = {\n            valDay: this.initDay(),\n            valCategory: 'food',\n            valAmount: '',\n            valComment: '',\n            showParsingError: false\n        };\n    }\n\n    componentDidMount() {\n        // add event listener for clicks outside of form\n        document.addEventListener('click', this.handleClickOutideForm);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleClickOutideForm);\n    }\n\n    handleClickOutideForm(e) {\n        if(!this.nodeRef.current.contains(e.target)) {\n            this.props.onClose();\n        } \n    }\n\n    initDay() {\n        if (this.props.selectedDay) {\n            return dateFnsFormat(this.props.selectedDay, Constants.DATE_FORMAT_INPUT);\n        }\n        return null;\n    }\n\n    handleDay(e) {\n        this.setState({ valDay: e.target.value });\n    }\n\n    handleCategory(e) {\n        this.setState({ valCategory: e.target.value });\n    }\n\n    handleAmount(e) {\n        this.setState({ valAmount: e.target.value.replace(',', '.') });\n    }\n\n    handleComment(e) {\n        this.setState({ valComment: e.target.value });\n    }\n\n    handleFormInput(e) {\n        e.preventDefault();\n        let amount = parseFloat(this.state.valAmount);\n        if(isNaN(amount)) {\n            this.setState({ showParsingError: true });\n        } else {\n            this.setState({ showParsingError: false });\n            this.props.addSpendingsPosition(this.state.valCategory, amount, this.state.valComment, this.state.valDay);\n        }\n        this.setState({ valComment: '', valAmount: '' });\n    }\n\n    handleFormInputAndClose(e) {\n        this.handleFormInput(e);\n        this.props.onClose();\n    }\n\n    render() {\n        let categories = this.props.categories.map((cat) => {\n            return (\n                <option key={cat.value} value={cat.value}>{cat.label}</option>\n            );\n        });\n\n        const styleErrorInput = { \n            border: 'solid 1px red',\n            backgroundColor: '#ffe6e6' \n        };\n        const styleErrorTooltip = { \n            display: this.state.showParsingError ? 'inline' : 'none'\n        };\n        const msgError = 'Please enter a correct value';\n\n        return (\n            <div id=\"add-modal\" ref={this.nodeRef}>\n                <div id=\"tooltip-error\" style={styleErrorTooltip}>{msgError}</div>\n                <button className=\"close-X\" onClick={this.props.onClose}>x</button>\n\n                <form id=\"add-form\">\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>Date: </td>\n                                <td><input type=\"date\" \n                                           value={this.state.valDay} \n                                           onChange={(e) => this.handleDay(e)} /></td>\n                            </tr>\n                            <tr>\n                                <td>Category: </td>\n                                <td><select value={this.valCategory} onChange={(e) => this.handleCategory(e)}>{categories}</select></td>\n                            </tr>\n                            <tr>\n                                <td>Amount spent: </td>\n                                <td>\n                                    <input type=\"text\" \n                                           style={this.state.showParsingError ? styleErrorInput : {}}\n                                           value={this.state.valAmount.toLocaleString(this.props.locale, Constants.LOCALE_DECIMAL_OPTIONS)} \n                                           onChange={(e) => this.handleAmount(e)} \n                                           />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Comment: </td>\n                                <td>\n                                    <input type=\"text\" \n                                           maxLength=\"150\" \n                                           value={this.state.valComment} \n                                           onChange={(e) => this.handleComment(e)} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td></td>\n                                <td>\n                                    <input type=\"submit\" onClick={(e) => this.handleFormInput(e)} value=\"Submit + Add next\"/>\n                                    <input type=\"submit\" onClick={(e) => this.handleFormInputAndClose(e)} value=\"Submit + Close\"/>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </form>\n            </div>\n        );\n    }\n}\n\nSpendingsForm.propTypes = {\n    selectedDay: PropTypes.instanceOf(Date).isRequired,\n    locale: PropTypes.string.isRequired,\n    categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n    addSpendingsPosition: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default SpendingsForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Utils from '../../utils/Utils';\nimport { getSpendings } from '../../utils/LocalStore';\nimport './Tiles.scss';\n\nclass SpendingsToday extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            catExpandedView: this.initStateObject()\n        };\n    }\n\n    initStateObject() {\n        let stateExpandedView = {};\n        this.props.categories.forEach((cat) => {\n            stateExpandedView[cat.value] = true;\n        });\n        return stateExpandedView;\n    }\n\n    toggleDisplayAllPositionsForCat(cat) {\n        let updatedCatState = this.state.catExpandedView;\n        updatedCatState[cat] = !this.state.catExpandedView[cat];\n        this.setState({ catExpandedView: updatedCatState });\n    }\n\n    renderTableBody(spendingsToday) {\n        return this.props.categories.map((cat) => {\n            let amountSpent = Utils.calculateTotalAmountByCategory(spendingsToday, cat.value);\n            let arrowClass = amountSpent > 0 ? (this.state.catExpandedView[cat.value] ? 'arrow-up' : 'arrow-down') : '';\n            return (\n                <tbody key={cat.value}>\n                    <tr>\n                        <td>{cat.label}</td>\n                        <td className=\"cell-amount\">{amountSpent.toLocaleString(this.props.locale, this.props.currencyOptions)}</td>\n                        <td className=\"arrow\"><span className={arrowClass} onClick={() => this.toggleDisplayAllPositionsForCat(cat.value)}></span></td>\n                    </tr>\n                    {this.renderSpendingsPositons(spendingsToday, cat.value)}\n                </tbody>\n            );\n        });\n    }\n\n    renderSpendingsPositons(spendingsToday, cat) {\n        let spendingPositions = Utils.filterSpendingsByCategory(spendingsToday, cat);\n        let displayExpanded = this.state.catExpandedView[cat] ? '' : 'none';\n\n        if (spendingPositions) {\n            return spendingPositions.map((item, i) => {\n                return (\n                    <tr key={cat+i} style={{display: displayExpanded}} className=\"font-small-colored\">\n                        <td>{item.comment}</td>\n                        <td className=\"cell-amount\">{item.amount.toLocaleString(this.props.locale, this.props.currencyOptions)}</td>\n                    </tr>\n                );\n            });\n        }\n    }\n\n    render() {\n        const spendingsToday = getSpendings(new Date());\n        const totalToday = Utils.calculateSumOfSpendings(spendingsToday);\n\n        return( \n            <div className=\"tile\">\n                <button className=\"close-tile\" title=\"Close\" onClick={() => this.props.toggleDisplay('spendingsToday')}>\n                    x\n                </button>\n                <h4>Today's Spendings</h4>\n                <table className=\"table-spendings\">  \n                    {this.renderTableBody(spendingsToday)}    \n                    <tfoot>\n                        <tr>\n                            <td><b>Total</b></td>\n                            <td className=\"cell-amount\"><b>{totalToday.toLocaleString(this.props.locale, this.props.currencyOptions)}</b></td>\n                        </tr>\n                    </tfoot>      \n                </table>\n            </div>\n        ); \n    }\n}\n\nSpendingsToday.propTypes = {\n    locale: PropTypes.string.isRequired,\n    currencyOptions: PropTypes.object.isRequired,\n    categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n    toggleDisplay: PropTypes.func.isRequired\n};\n\nexport default SpendingsToday;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dateFnsFormat from 'date-fns/format';\nimport { Constants } from '../../utils/Constants';\nimport './Tiles.scss';\n\nclass SpendingsSingleDay extends React.Component { // TODO Merge with SpendingsToday\n    constructor(props) {\n        super(props);\n        this.state = {\n            //spendingThisDay: \n            catExpandedView: this.initStateObject()\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // When selected day changes, only categories are displayed, \n        // single spending positions are collapsed\n        if (nextProps.spendingsForDay !== this.props.spendingsForDay) {\n            this.setState({ catExpandedView: this.initStateObject() });\n        }\n    }\n\n    initStateObject() {\n        let stateExpandedView = {};\n        this.props.categories.forEach((cat) => {\n            stateExpandedView[cat.value] = false;\n        });\n        return stateExpandedView;\n    }\n    \n    calculateTotalAmountPerCategory(cat) {\n        if (this.props.spendingsForDay && this.props.spendingsForDay.length > 0) {\n            return this.props.spendingsForDay.filter((item) => {\n                return item.cat === cat;\n            }).map((item) => {\n                return item.amount;\n            }).reduce((prevAmount, nextAmount) => {\n                return prevAmount + nextAmount;\n            }, 0);\n        }\n\n        return 0;  \n    }\n\n    getSpendingsPositionByCat(cat) {\n        if (this.props.spendingsForDay && this.props.spendingsForDay.length > 0) {\n            return this.props.spendingsForDay.filter((item) => {\n                return item.cat === cat;\n            });\n        }\n    }\n\n    toggleDisplayAllPositionsForCat(cat) {\n        let updatedCatState = this.state.catExpandedView;\n        updatedCatState[cat] = !this.state.catExpandedView[cat];\n        this.setState({ catExpandedView: updatedCatState });\n    }\n\n    renderTableBody() {\n\n        return this.props.categories.map((cat) => {\n            let amountSpent = this.calculateTotalAmountPerCategory(cat.value);\n            let arrowClass = amountSpent > 0 ? (this.state.catExpandedView[cat.value] ? 'arrow-up' : 'arrow-down') : '';\n            return (\n                <tbody key={cat.value}>\n                    <tr>\n                        <td>{cat.label}</td>\n                        <td className=\"cell-amount\">{amountSpent.toLocaleString(this.props.locale, this.props.currencyOptions)}</td>\n                        <td className=\"arrow\"><span className={arrowClass} onClick={() => this.toggleDisplayAllPositionsForCat(cat.value)}></span></td>\n                    </tr>\n                    {this.renderSpendingsPositons(cat.value)}\n                </tbody>\n            );\n        });\n    }\n\n    renderSpendingsPositons(cat) {\n        let spendingPositions = this.getSpendingsPositionByCat(cat);\n        let displayExpanded = this.state.catExpandedView[cat] ? '' : 'none';\n\n        if (spendingPositions) {\n            return spendingPositions.map((item, i) => {\n                return (\n                    <tr key={cat+i} style={{display: displayExpanded}} className=\"font-small-colored\">\n                        <td>{item.comment}</td>\n                        <td className=\"cell-amount\">{item.amount.toLocaleString(this.props.locale, this.props.currencyOptions)}</td>\n                    </tr>\n                );\n            });\n        }\n\n    }\n\n    render() {\n        return( \n            <div className=\"tile\">\n                <button className=\"close-tile\" title=\"Close\" onClick={() => this.props.toggleDisplay('spendingsSingleDay')}>\n                    x\n                </button>\n                <h4>Spendings on {dateFnsFormat(this.props.selectedDay, Constants.DATE_FORMAT)}</h4>\n                <table className=\"table-spendings\">  \n                    {this.renderTableBody()}    \n                    <tfoot>\n                        <tr>\n                            <td><b>Total</b></td>\n                            <td className=\"cell-amount\"><b>{this.props.totalAmountDay.toLocaleString(this.props.locale, this.props.currencyOptions)}</b></td>\n                        </tr>\n                    </tfoot>      \n                </table>\n            </div>\n        ); \n    }\n}\n\nSpendingsSingleDay.propTypes = {\n    selectedDay: PropTypes.instanceOf(Date),\n    locale: PropTypes.string.isRequired,\n    currencyOptions: PropTypes.object.isRequired,\n    totalAmountDay: PropTypes.number,\n    spendingsForDay: PropTypes.arrayOf(PropTypes.object),\n    categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n    toggleDisplay: PropTypes.func.isRequired\n};\n\nexport default SpendingsSingleDay;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Tiles.scss';\n\n/**\n * Shows total spendings of today, current week, month & year.\n */\nfunction TotalSpendings(props) {\n\n    return (\n        <div className=\"tile\">\n            <button className=\"close-tile\" title=\"Close\" onClick={() => props.toggleDisplay('totalSpendings')}>\n                x\n            </button>\n            <h4>Total Spendings</h4>\n            <table className=\"table-spendings\">\n                <tbody>\n                    <tr>\n                        <td>Today:</td>\n                        <td className=\"cell-amount\">{props.totalAmountToday.toLocaleString(props.locale, props.currencyOptions)}</td>\n                    </tr>\n                    <tr>\n                        <td>This week:</td>\n                        <td className=\"cell-amount\">{props.totalAmountWeek.toLocaleString(props.locale, props.currencyOptions)}</td>\n                    </tr>\n                    <tr>\n                        <td>This month:</td>\n                        <td className=\"cell-amount\">{props.totalAmountMonth.toLocaleString(props.locale, props.currencyOptions)}</td>\n                    </tr>\n                    <tr>\n                        <td>This year:</td>\n                        <td className=\"cell-amount\">{props.totalAmountYear.toLocaleString(props.locale, props.currencyOptions)}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nTotalSpendings.propTypes = {\n    locale: PropTypes.string.isRequired,\n    currencyOptions: PropTypes.object.isRequired,\n    totalAmountToday: PropTypes.number,\n    totalAmountWeek: PropTypes.number,\n    totalAmountMonth: PropTypes.number,\n    totalAmountYear: PropTypes.number,\n    toggleDisplay: PropTypes.func.isRequired\n};\n\nexport default TotalSpendings;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PieChart, Pie, Legend, Cell } from 'recharts';\nimport { getAmountSpentByCategory } from '../../utils/LocalStore';\nimport './Tiles.scss';\n\nfunction CategoriesPieChart(props) {\n    const data = getAmountSpentByCategory(props.categories);\n    let pieColors = [];\n    let chartData;\n\n    if(!data || data.length === 0) {\n        pieColors.push('#f1f4f4');\n        chartData = [{\n            name: 'No data available',\n            value: 1\n        }];\n    } else {\n        chartData = props.categories.map((cat, i) => {\n        pieColors.push(cat.color);\n        return { \n            name: cat.label.length <= 20 ? cat.label : cat.label.substring(0, 18) + '...',\n            value: data[i].amount };\n        });\n    }\n    \n    return (\n        <div className=\"tile\">\n            <button className=\"close-tile\" title=\"Close\" onClick={() => props.toggleDisplay('catPieChart')}>\n                x\n            </button>\n            <h4>Spendings on Categories</h4>\n            <div id=\"piechart\">\n                <PieChart width={400} height={150}>\n                    <Pie cx={100} cy={70} isAnimationActive={true} data={chartData} outerRadius={65} fill=\"#58747E\" \n                        labelLine={false} label={false} dataKey=\"value\" nameKey=\"name\">\n                        {\n                            chartData.map((entry, i) => <Cell fill={pieColors[i]} key={i}/>)\n                        }\n                    </Pie>   \n                    <Legend layout=\"vertical\" align=\"right\" verticalAlign=\"top\" width={190} iconType=\"square\" iconSize={12}/>\n                </PieChart>  \n            </div>\n        </div>\n    );\n}\n\nCategoriesPieChart.propTypes = {\n    toggleDisplay: PropTypes.func.isRequired,\n    categories: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default CategoriesPieChart;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dateFnsFormat from 'date-fns/format';\nimport { Constants } from '../../utils/Constants';\nimport './Tiles.scss';\n\nfunction RecentHistory(props) {\n    const entries = props.recentSpendings.map((pos, i) => {\n        return (\n            <tr key={i}> \n                <td className=\"align-left\">{dateFnsFormat(pos.day, Constants.DATE_FORMAT_SHORT)}</td>\n                <td>{pos.comment.length < 28 ? pos.comment : pos.comment.substring(0, 25) + '...'}</td>\n                <td className=\"font-small-colored align-right\">\n                    {pos.amount.toLocaleString(props.locale, props.currencyOptions)}\n                </td>\n            </tr>\n        );\n    });\n\n    return (\n        <div className=\"tile\">\n            <button className=\"close-tile\" title=\"Close\" onClick={() => props.toggleDisplay('recentHistory')}>\n                x\n            </button>\n            <h4>Recently Added Spendings</h4>\n            <table className=\"table-spendings-history\">\n                <tbody>\n                    {entries}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nRecentHistory.propTypes = {\n    locale: PropTypes.string.isRequired,\n    currencyOptions: PropTypes.object.isRequired,\n    recentSpendings: PropTypes.arrayOf(PropTypes.object),\n    toggleDisplay: PropTypes.func.isRequired\n};\n\nexport default RecentHistory;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dateFnsFormat from 'date-fns/format';\nimport { Constants } from '../../utils/Constants';\nimport { getRecurrentSpendings } from '../../utils/LocalStore';\nimport './Tiles.scss';\n\nfunction RecurrentSpendings(props) {\n    const recurrentSp = getRecurrentSpendings();\n    const entries = recurrentSp.map((rs, i) => {\n        return (\n            <tr key={i}> \n                <td className=\"align-left\">{dateFnsFormat(rs.startDate, Constants.DATE_FORMAT_SHORT)}</td>\n                <td>{rs.interval}</td>\n                <td>{rs.comment.length < 28 ? rs.comment : rs.comment.substring(0, 25) + '...'}</td>\n                <td className=\"font-small-colored align-right\">\n                    {rs.amount.toLocaleString(props.locale, props.currencyOptions)}\n                </td>\n            </tr>\n        );\n    });\n\n    const tbleHead = entries.length > 0 ? \n                        (<tr>\n                            <td> Since </td>\n                            <td> Interval </td>\n                            <td> Description </td>\n                            <td> Amount </td>\n                        </tr>) \n                        : <tr><td>No recurrent spendings found</td></tr>;\n\n    return (\n        <div className=\"tile\">\n            <button className=\"close-tile\" title=\"Close\" onClick={() => props.toggleDisplay('recurrentSpendings')}>\n                x\n            </button>\n            <h4>Recurrent Spendings</h4>\n            <table className=\"table-spendings-history\">\n                <thead>\n                    {tbleHead}\n                </thead>\n                <tbody>\n                    {entries}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nRecurrentSpendings.propTypes = {\n    locale: PropTypes.string.isRequired,\n    currencyOptions: PropTypes.object.isRequired,\n    toggleDisplay: PropTypes.func.isRequired\n};\n\nexport default RecurrentSpendings;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SpendingsToday from './tiles/SpendingsToday';\nimport SpendingsSingleDay from './tiles/SpendingsSingleDay';\nimport TotalSpendings from './tiles/TotalSpendings';\nimport CategoriesPieChart from './tiles/CategoriesPieChart';\nimport RecentHistory from './tiles/RecentHistory';\nimport RecurrentSpendings from './tiles/RecurrentSpendings';\nimport { PreferenceContext } from '../utils/Contexts';\nimport { Constants } from '../utils/Constants';\nimport './tiles/Tiles.scss';\n\nclass Tiles extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleDisplay = this.toggleDisplay.bind(this);\n        this.state = {\n            display : {\n                catPieChart: true,\n                spendingsSingleDay: true,\n                totalSpendings: true,\n                recentHistory: true,\n                spendingsToday: true,\n                recurrentSpendings: true\n            }\n        };\n    }\n\n    toggleDisplay(tile) {\n        this.setState({ display: {...this.state.display, ...{[tile] : !this.state.display[tile]} } });\n    }\n\n    render() {\n        return (\n            <PreferenceContext.Consumer>\n            {({currency, locale, categories}) => {\n                let currencyOptions = { ...Constants.DEFAULT_CURRENCY_OPTIONS, ...{ currency: currency }};\n\n                return (\n                    <div id=\"tiles\" className=\"box\">\n                        {this.state.display.catPieChart && \n                            <CategoriesPieChart \n                                toggleDisplay={this.toggleDisplay}\n                                categories={categories}\n                            />\n                        }\n        \n                        {this.state.display.spendingsToday &&\n                            <SpendingsToday \n                                toggleDisplay={this.toggleDisplay}\n                                locale={locale}\n                                currencyOptions={currencyOptions}\n                                categories={categories}\n                            />\n                        }\n        \n                        {this.state.display.totalSpendings &&\n                            <TotalSpendings \n                                toggleDisplay={this.toggleDisplay}\n                                totalAmountToday={this.props.totalAmountToday}\n                                totalAmountWeek={this.props.totalAmountWeek}\n                                totalAmountMonth={this.props.totalAmountMonth}\n                                totalAmountYear={this.props.totalAmountYear}\n                                locale={locale}\n                                currencyOptions={currencyOptions}\n                            />\n                        }\n        \n                        {this.state.display.recentHistory &&\n                            <RecentHistory \n                                toggleDisplay={this.toggleDisplay}\n                                recentSpendings={this.props.recentSpendings}\n                                locale={locale}\n                                currencyOptions={currencyOptions}\n                            />\n                        }\n        \n                        {this.state.display.spendingsSingleDay &&\n                            <SpendingsSingleDay\n                                toggleDisplay={this.toggleDisplay}\n                                totalAmountDay={this.props.totalAmountDay}\n                                spendingsForDay={this.props.spendingsForDay}\n                                selectedDay={this.props.selectedDay}\n                                locale={locale}\n                                currencyOptions={currencyOptions}\n                                categories={categories}\n                            />\n                        }  \n        \n                        {this.state.display.recurrentSpendings &&\n                            <RecurrentSpendings \n                                toggleDisplay={this.toggleDisplay}\n                                locale={locale}\n                                currencyOptions={currencyOptions}\n                            />\n                        } \n                    </div>\n                );\n            }}\n            </PreferenceContext.Consumer>\n            \n        );\n    }\n\n}\n\nTiles.propTypes = {\n    selectedDay: PropTypes.instanceOf(Date).isRequired,\n    totalAmountDay: PropTypes.number,\n    totalAmountToday: PropTypes.number,\n    totalAmountWeek: PropTypes.number,\n    totalAmountMonth: PropTypes.number,\n    totalAmountYear: PropTypes.number,\n    spendingsForDay: PropTypes.arrayOf(PropTypes.object),\n    recentSpendings: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default Tiles;","import React from 'react';\nimport uuidv4 from 'uuid/v4';\nimport Calender from './dashboard/Calender';\nimport AddForm from './dashboard/AddForm';\nimport Tiles from './dashboard/Tiles';\nimport Utils from './utils/Utils';\nimport * as localStore from './utils/LocalStore';\nimport { PreferenceContext } from './utils/Contexts';\nimport './dashboard/Dashboard.scss';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateSelectedDay = this.updateSelectedDay.bind(this);\n        this.addSpendingsPosition = this.addSpendingsPosition.bind(this);\n        this.handleFileUpload = this.handleFileUpload.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.openAddModal = this.openAddModal.bind(this);\n        this.openImportModal = this.openImportModal.bind(this);\n        this.state = {\n            selectedDay: new Date(),\n            recentSpendings: [],\n            addFormIsVisible: false\n        };\n    }\n\n    componentDidMount() {\n        this.fileSelector = this.initFileSelector();\n        this.setState({\n            // load recent spendings\n            recentSpendings: localStore.getSpendingsRecentlyAdded(15)\n        });\n    }\n\n    initFileSelector() {\n        const fileSelector = document.createElement('input');\n        fileSelector.setAttribute('type', 'file');\n        fileSelector.setAttribute('multiple', true);\n        fileSelector.onchange = this.handleFileUpload;\n        return fileSelector;\n    }\n\n    updateSelectedDay(day) {\n        this.setState({ selectedDay: day });\n    }\n\n    addSpendingsPosition(cat, amount, comment, day) {\n        const date = day ? new Date(day) : this.state.selectedDay;\n        const newSpending = {\n            id: uuidv4(),\n            day: date,\n            cat: cat,\n            amount: amount,\n            comment: comment\n        };\n\n        this.setState({\n            recentSpendings: [newSpending].concat(this.state.recentSpendings)\n        });\n        localStore.postSpendingPosition(newSpending);\n    }\n\n    getTotalAmountDay(date) {\n        let spendings = localStore.getSpendings(date ? date : this.state.selectedDay);\n        return Utils.calculateSumOfSpendings(spendings);\n    }\n\n    getTotalAmountWeek(date) {\n        let spendings = localStore.getSpendings(date ? date : this.state.selectedDay, true);\n        return Utils.calculateSumOfSpendings(spendings);\n    }\n\n    getTotalAmountMonth(date) {\n        let spendings = localStore.getSpendings(date ? date : this.state.selectedDay, false, true);\n        return Utils.calculateSumOfSpendings(spendings);\n    }\n\n    getTotalAmountYear(date) {\n        let spendings = localStore.getSpendings(date ? date : this.state.selectedDay, false, false, true);\n        return Utils.calculateSumOfSpendings(spendings);\n    }\n\n    getSpendingsForSelectedDay() {\n        return localStore.getSpendings(this.state.selectedDay);\n    }\n\n    /** TODO still needed?\n     * Returns an array that contains the total amount of\n     * money spent on each day for an entire month.\n     * Position i contains amount for (i+1)th day of the month.\n     * \n     * @param {Number} month (Jan=0, Dec=11)\n     */\n    calculateTotalAmoutsPerDay(month) {\n        // init array with 0.00 as default value\n        let totalAmounts = new Array(Utils.getNumDaysOfMonth(this.state.selectedDay)).fill(0);\n        this.state.spendingPositions.filter((item) => {\n            return item.day.getMonth() === month;\n        }).forEach((item) => {\n            totalAmounts[item.day.getDate()-1] += item.amount;\n        });\n\n        return totalAmounts;\n    }\n\n    openAddModal() {\n        this.setState({ addFormIsVisible: true });\n    }\n\n    openImportModal(e) {\n        e.preventDefault();\n        this.fileSelector.click();\n    }\n\n    handleFileUpload(e) {\n        e.preventDefault();\n        let files = e.target.files;\n        if(!files) {\n            console.log('No files to upload found');\n            return;\n        }\n\n        for(let i = 0; i < files.length; i++) {\n             if(files[i].type === 'application/json') {\n                 let reader = new FileReader();\n\n                 reader.onload = () => {\n                    let json = JSON.parse(reader.result);\n                    if(json && json.data) {\n                        json.data.forEach((item) => {\n                            this.addSpendingsPosition(item.cat, item.amount, item.comment, new Date(item.day));\n                        });\n                    } \n                 };\n\n                 reader.onerror = (err) => {\n                    console.log('error while reading file: ' + err); // TODO Display error msg\n                 };\n                 reader.readAsText(files[i]);\n             } else {\n                console.log('Error: File is not a JSON document...');\n                // TODO Display error msg\n            }\n        }\n    }\n\n    onClose() {\n        this.setState({\n            addFormIsVisible: false\n        });\n    }\n\n    render() {\n        return (\n            <div id=\"dashboard\" className=\"box\">\n                    <Tiles \n                        totalAmountToday={this.getTotalAmountDay(new Date())}\n                        totalAmountDay={this.getTotalAmountDay()}\n                        totalAmountWeek={this.getTotalAmountWeek(new Date())}\n                        totalAmountMonth={this.getTotalAmountMonth(new Date())}\n                        totalAmountYear={this.getTotalAmountYear(new Date())}\n\n                        selectedDay={this.state.selectedDay}\n                        spendingsForDay={this.getSpendingsForSelectedDay()}\n                        recentSpendings={this.state.recentSpendings}\n                    />\n\n                    <Calender\n                        selectedDay={this.state.selectedDay}\n                        updateSelectedDay={this.updateSelectedDay}\n                        openAddModal={this.openAddModal}  \n                        openImportModal={this.openImportModal}  \n                    />\n\n                    {this.state.addFormIsVisible &&\n                        <PreferenceContext.Consumer>\n                            {({locale, categories}) => (\n                                <AddForm \n                                    selectedDay={this.state.selectedDay}\n                                    addSpendingsPosition={this.addSpendingsPosition} \n                                    onClose={this.onClose}\n                                    locale={locale}\n                                    categories={categories}\n                                /> \n                            )}\n                        </PreferenceContext.Consumer>\n                        \n                    }\n                \n            </div>\n        );\n    }\n}\nDashboard.contextType = PreferenceContext; // TODO this.context not working..\n\nexport default Dashboard;","import React, { Component } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid } from 'recharts';\nimport subYears from 'date-fns/sub_years';\nimport startOfDay from 'date-fns/start_of_day';\nimport startOfWeek from 'date-fns/start_of_week';\nimport startOfMonth from 'date-fns/start_of_month';\nimport startOfYear from 'date-fns/start_of_year';\nimport endOfDay from 'date-fns/end_of_day';\nimport endOfWeek from 'date-fns/end_of_week';\nimport endOfMonth from 'date-fns/end_of_month';\nimport endOfYear from 'date-fns/end_of_year';\nimport eachDay from 'date-fns/each_day';\nimport dateFnsFormat from 'date-fns/format';\nimport { Constants } from './utils/Constants';\nimport { PreferenceContext } from './utils/Contexts';\nimport { getSpendingsBetween} from './utils/LocalStore';\nimport Utils from './utils/Utils';\n\nconst FORMAT_DAY = 'DD.MM.';\nconst FORMAT_WEEK = 'W';\nconst FORMAT_MONTH = 'MMM';\nconst FORMAT_YEAR = 'YYYY';\n\nclass Analytics extends Component {\n    constructor(props) {\n        super(props);\n        const today = new Date();\n        this.state = {\n            unit: 'month',\n            category: 'all',\n            dateFrom: dateFnsFormat(subYears(today, 1), Constants.DATE_FORMAT_INPUT),\n            dateTo: dateFnsFormat(today, Constants.DATE_FORMAT_INPUT),\n            dataTotals: []\n        };\n    }\n\n    componentDidMount() {\n        this.updateChart();\n    }\n\n    handleUnit(e) {\n        this.setState({ unit: e.target.value });\n    }\n\n    handleCategory(e) {\n        this.setState({ category: e.target.value });\n    }\n\n    handleDate1(e) {\n        this.setState({ dateFrom: e.target.value });\n    }\n\n    handleDate2(e) {\n        this.setState({ dateTo: e.target.value });\n    }\n\n    updateChart() {\n        let datesEach = [];\n        let startOf, endOf, dateFormat;\n\n        if(this.state.unit === 'day') {\n            datesEach = eachDay(this.state.dateFrom, this.state.dateTo);\n            startOf = startOfDay;\n            endOf = endOfDay;\n            dateFormat = FORMAT_DAY;\n        }\n        else if(this.state.unit === 'week') {\n            datesEach = Utils.dateInEachWeek(this.state.dateFrom, this.state.dateTo);\n            startOf = startOfWeek;\n            endOf = endOfWeek;\n            dateFormat = FORMAT_WEEK;\n        }\n        else if(this.state.unit === 'month') {\n            datesEach = Utils.dateInEachMonth(this.state.dateFrom, this.state.dateTo);\n            startOf = startOfMonth;\n            endOf = endOfMonth;\n            dateFormat = FORMAT_MONTH;\n        }\n        else if(this.state.unit === 'year') {\n            datesEach = Utils.dateInEachYear(this.state.dateFrom, this.state.dateTo);\n            startOf = startOfYear;\n            endOf = endOfYear;\n            dateFormat = FORMAT_YEAR;\n        }\n\n        let data = datesEach.map(date => {\n            const cat = this.state.category === 'all' ? undefined : this.state.category;\n            const spendings = getSpendingsBetween(startOf(date), endOf(date), cat);\n            const total = Utils.calculateSumOfSpendings(spendings);\n            return {\n                name: dateFnsFormat(date, dateFormat),\n                value: total\n            };\n        });\n        \n        this.setState({ dataTotals: data });\n    }\n\n    render() {\n        const optionsUnits = Constants.TIME_UNITS.map(unit => (<option key={unit} value={unit}>{unit}</option>));\n        return (\n            <div id=\"analytics\" className=\"box\">\n                <h1 className=\"menu-item-headline\">Analytics</h1>\n\n                <div className=\"border-dashed scroll-x-axis\">\n                    <h4>Totals</h4>\n                    <div className=\"setup\">\n                        <div>Unit:&nbsp;\n                            <select value={this.state.unit} onChange={(e) => this.handleUnit(e)}>{optionsUnits}</select>\n                        </div>\n                        <div>\n                            Time span:&nbsp;\n                            <input type=\"date\" value={this.state.dateFrom} onChange={(e) => this.handleDate1(e)}/>&nbsp;\n                            <input type=\"date\" value={this.state.dateTo} onChange={(e) => this.handleDate2(e)}/>\n                        </div>\n                        <div>Categories:&nbsp;\n                            <select value={this.state.category} onChange={(e) => this.handleCategory(e)}>\n                                <option value=\"all\">All</option>\n                                <PreferenceContext.Consumer>\n                                    {({categories}) => {\n                                        const optionsCats = categories.map((cat) => \n                                                <option key={cat.value} value={cat.value}>{cat.label}</option>);\n                                        return (optionsCats);\n                                    }}\n                                </PreferenceContext.Consumer>\n                            </select>\n                        </div>\n                        <div>\n                            <button onClick={() => this.updateChart()}>Update chart</button>\n                        </div>\n                    </div>\n                    <div className=\"chart\">\n                        <BarChart width={1000} height={300} data={this.state.dataTotals} margin={{top: 30, right: 30, left: 20, bottom: 5}}>\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\n                            <XAxis dataKey=\"name\"/>\n                            <YAxis/>\n                            <Bar dataKey=\"value\" fill=\"#7E6258\" />\n                        </BarChart>\n                    </div>\n                </div>\n                <div className=\"border-dashed\">\n                    <h4>Averages</h4>\n                    TODO\n                </div>\n                <div className=\"border-dashed\">\n                    <h4>Comparisons</h4>\n                    TODO\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Analytics;","import React from 'react';\nimport { Constants } from './utils/Constants';\nimport { PreferenceContext } from './utils/Contexts';\nimport './settings/TilesSettings.scss';\n\nclass Settings extends React.Component {\n\n    render() {\n        let currencyOptions = Constants.CURRENCIES.map(curr => \n            (<option key={curr.code} value={curr.code}>{curr.name} ({curr.symbol})</option>));\n\n        let localeOptions = Constants.LOCALES.map(loc => (<option key={loc} value={loc}>{loc}</option>));\n    \n        return (\n            <div id=\"settings\" className=\"box\">\n                <h1 className=\"menu-item-headline\">Settings</h1>\n                    <div className=\"border-dashed\">\n                        <h4>Preferences</h4>\n                        <table>\n                            <PreferenceContext.Consumer>\n                            {({currency, locale, categories, updateCurrency, updateLocale, addCategory, removeCategory}) => \n                            {\n                                let categoryTbl = categories.map(cat => (\n                                    <tr className=\"reducedPadding\" key={cat.value}>\n                                        <td><span className=\"font-small-colored\">{cat.label}</span></td>\n                                        <td><button className=\"btnDelete\" title=\"Delete\" onClick={() => removeCategory(cat.value)}>X</button></td>\n                                    </tr>));\n\n                                return (\n                                    <tbody>\n                                        <tr>\n                                            <td className=\"prefTitle\">Currency</td>\n                                            <td><span className=\"font-small-colored\">{currency}</span></td>\n                                            <td>\n                                                Update: <select value={currency} onChange={(e) => updateCurrency(e)}>{currencyOptions}</select>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td className=\"prefTitle\">Locale</td>\n                                            <td><span className=\"font-small-colored\">{locale}</span></td>\n                                            <td>\n                                                Update: <select value={locale} onChange={(e) => updateLocale(e)}>{localeOptions}</select>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td className=\"prefTitle\" rowSpan={categoryTbl.length + 1}>Categories</td>\n                                        </tr>\n                                        {categoryTbl}\n                                    </tbody>\n                                );\n                            }}\n                            </PreferenceContext.Consumer>\n                        </table> \n                    </div>\n                    <div className=\"border-dashed\">\n                        <h4>Recurrent Spendings</h4>\n                    </div>\n            </div>\n        );\n    }\n}\n\nexport default Settings;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Home, BarChart2, Settings } from 'react-feather';\nimport './style.scss';\n\nclass Sidebar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayTitleDashboard: false,\n            displayTitleAnalytics: false,\n            displayTitleSettings: false,\n            distanceTop: 55\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.handleSidebarPosition.bind(this));\n    }\n\n    handleSidebarPosition() {\n        let scrollTop = (document.documentElement.scrollTop || document.body.scrollTop);\n        this.setState({ distanceTop: Math.max(55 - scrollTop, 0) });\n    }\n\n    toggleNavTitle(stateItem) {\n        this.setState({ [stateItem]: !this.state[stateItem] });\n    }\n\n    render() {\n        return(\n            <div id=\"sidebar\" style={{top: this.state.distanceTop}}>\n                <ul>\n                    <li onMouseEnter={() => this.toggleNavTitle('displayTitleDashboard')}\n                        onMouseLeave={() => this.toggleNavTitle('displayTitleDashboard')} >\n                        <Link to=\"/dashboard\">\n                            <Home \n                                width=\"27\"\n                                height=\"27\"\n                                className=\"nav-icon\"\n                            />\n                            <span className={this.state.displayTitleDashboard ? '' : 'hidden'}>Dashboard</span>               \n                        </Link>   \n                    </li> \n\n                    \n                    <li onMouseEnter={() => this.toggleNavTitle('displayTitleAnalytics')}\n                        onMouseLeave={() => this.toggleNavTitle('displayTitleAnalytics')} >\n                        <Link to=\"/analytics\">\n                            <BarChart2 \n                                width=\"27\"\n                                height=\"27\"\n                                className=\"nav-icon\"\n                            />\n                            <span className={this.state.displayTitleAnalytics ? '' : 'hidden'}>Analytics</span>\n                        </Link>\n                    </li>\n\n                    <li onMouseEnter={() => this.toggleNavTitle('displayTitleSettings')}\n                        onMouseLeave={() => this.toggleNavTitle('displayTitleSettings')} >\n                        <Link to=\"/settings\">\n                            <Settings \n                                width=\"27\"\n                                height=\"27\"\n                                className=\"nav-icon\"\n                            />\n                            <span className={this.state.displayTitleSettings ? '' : 'hidden'}>Settings</span>\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from './Header';\nimport Dashboard from './Dashboard';\nimport Analytics from './Analytics';\nimport Settings from './Settings';\nimport Sidebar from './Sidebar';\nimport { loadCurrency, loadLocale, loadCategories, \n    saveCurrency, saveLocale, saveCategories } from './utils/LocalStore';\nimport { Constants } from './utils/Constants';\nimport { PreferenceContext } from './utils/Contexts';\nimport './style.scss';\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.updateCurrency = this.updateCurrency.bind(this);\n        this.updateLocale = this.updateLocale.bind(this);\n        this.addCategory = this.addCategory.bind(this);\n        this.removeCategory = this.removeCategory.bind(this);\n\n        this.state = {\n            currency: loadCurrency() || Constants.DEFAULT_CURRENCY,\n            locale: loadLocale() || Constants.DEFAULT_LOCALE,\n            categories: loadCategories() || Constants.DEFAULT_CATEGORIES\n        };\n    }\n\n    componentWillUnmount() {\n        saveCurrency(this.state.currency);\n        saveLocale(this.state.locale);\n        saveCategories(this.state.categories);\n    }\n\n    updateCurrency(e) {\n        this.setState({ currency: e.target.value });\n    }   \n\n    updateLocale(e) {\n        this.setState({ locale: e.target.value });\n    }  \n\n    addCategory(newVal) {\n        this.setState({ categories: [...this.state.categories, newVal] });\n    }\n\n    removeCategory(catValue) {\n        let index = this.state.categories.findIndex(cat => cat.value === catValue);\n        let copy = this.state.categories.slice();\n        copy.splice(index, 1);\n        this.setState({ categories: copy });\n    }\n\n    render() {\n        return (\n        <div id=\"main-container\"> \n            <Header />\n            <nav className=\"box\">\n                <Sidebar />\n            </nav>\n            <PreferenceContext.Provider value={{\n                currency: this.state.currency,\n                locale: this.state.locale,\n                categories: this.state.categories,\n                updateCurrency: this.updateCurrency,\n                updateLocale: this.updateLocale,\n                addCategory: this.addCategory,\n                removeCategory: this.removeCategory\n            }}>\n                <Switch>\n                    <Route exact path=\"/\" component={Dashboard}/>\n                    <Route path=\"/dashboard\" component={Dashboard}/>\n                    <Route path=\"/analytics\" component={Analytics}/>\n                    <Route path=\"/settings\" component={Settings}/>\n                </Switch>\n            </PreferenceContext.Provider>\n        </div>\n        );\n    }\n    \n}\n\nexport default Main;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\nimport Main from './Main';\nimport { HashRouter } from 'react-router-dom';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render((\n        <HashRouter>\n            <Main />\n        </HashRouter>\n    ), document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}