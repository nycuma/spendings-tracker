{"version":3,"sources":["utils/ReduxStore.js","utils/Utils.js","Header.js","utils/Constants.js","dashboard/TooltipAmountDay.js","dashboard/Calender.js","dashboard/AddForm.js","dashboard/tiles/SpendingsSingleDay.js","dashboard/tiles/TotalSpendings.js","dashboard/tiles/CategoriesPieChart.js","dashboard/tiles/RecentHistory.js","utils/LocalStore.js","dashboard/tiles/RecurrentSpendings.js","dashboard/Tiles.js","Dashboard.js","Analytics.js","Settings.js","Sidebar.js","Main.js","registerServiceWorker.js","index.js"],"names":["rootReducer","combineReducers","spendings","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","id","uuidv4","day","cat","amount","comment","dateAdded","Date","settings","objectSpread","currency","locale","TEMPLATES","food","share","items","min","max","coffeeshop","household","culture","clothes","transport","gifts","Utils","filterSpendingsByDay","filter","item","isSameDay","filterSpendingsByWeek","isSameWeek","filterSpendingsByMonth","isSameMonth","filterSpendingsByYear","isSameYear","filterSpendingsByCategory","category","calculateTotalAmountByCategory","map","reduce","prevAmount","nextAmount","calculateTotalAmountsByCategories","categories","_this","this","amountByCat","value","Math","round","calculateSumOfSpendings","prev","next","dateInEachWeek","dateFrom","dateTo","dates","dateToEnd","endOfWeek","isBefore","push","addWeeks","dateInEachMonth","endOfMonth","addMonths","dateInEachYear","endOfYear","addYears","generateRandomData","count","startDate","endDate","randomSpendings","i","rand","random","catKeys","keys","accumulatedProb","j","createRandomSpending","getRandomDate","start","end","getRandomIndex","floor","getRandomAmount","index","connect","dispatch","addSpendings","props","today","someTimeAgo","subMonths","react_default","a","createElement","className","onClick","dist","Constants","LOCALE_DECIMAL_OPTIONS","style","minimumFractionDigits","maximumFractionDigits","DATE_FORMAT","DATE_FORMAT_SHORT","DATE_FORMAT_INPUT","FIRST_DAY_WEEK","TIME_UNITS","CURRENCIES","name","code","symbol","LOCALES","DEFAULT_CURRENCY_OPTIONS","DEFAULT_LOCALE","DEFAULT_CURRENCY","DEFAULT_CATEGORIES","label","descr","color","toLocaleString","Calender","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","daysWithSpendings","getDaysWithSpendings","prevProps","updateDaysWithSpendings","modifiers","e","getDate","dayState","top","pageY","left","pageX","setState","defineProperty","display","date","selectedDay","spendingsMonth","forEach","spending","_this2","weekend","daysOfWeek","dayWithSpending","values","tooltips","dashboard_TooltipAmountDay","key","DayPicker_default","todayButton","firstDayOfWeek","modifiersStyles","backgroundColor","fontWeight","onDayClick","updateSelectedDay","onDayMouseEnter","mod","displayAmountSpent","onDayMouseLeave","hideAmountSpent","onMonthChange","openAddModal","openImportModal","React","Component","SpendingsForm","nodeRef","createRef","valDay","initDay","valCategory","valAmount","valComment","showParsingError","document","addEventListener","handleClickOutideForm","_this3","removeEventListener","current","contains","target","onClose","dateFnsFormat","replace","preventDefault","parseFloat","isNaN","addSpendingsPosition","handleFormInput","_this4","styleErrorTooltip","ref","onChange","handleDay","handleCategory","border","handleAmount","maxLength","handleComment","handleFormInputAndClose","SpendingsSingleDay","catExpandedView","initStateObject","nextProps","spendingsForDay","stateExpandedView","onlyToday","updatedCatState","spendingsDay","amountSpent","arrowClass","currencyOptions","toggleDisplayAllPositionsForCat","renderSpendingsPositons","spendingPositions","displayExpanded","_this5","classes","fadeout","total","title","toggleDisplay","renderTableBody","totalToday","totalWeek","totalMonth","totalYear","chartData","data","pieColors","substring","es6","width","height","cx","cy","isAnimationActive","outerRadius","fill","labelLine","dataKey","nameKey","entry","layout","align","verticalAlign","iconType","iconSize","entries","slice","reverse","pos","KEY_SPENDINGS","getRecurrentSpendings","store","get","rs","interval","tbleHead","Tiles","catPieChart","spendingsSingleDay","totalSpendings","recentHistory","recurrentSpendings","tile","setTimeout","tiles_CategoriesPieChart","t","tiles_SpendingsSingleDay","tiles_TotalSpendings","tiles_RecentHistory","tiles_RecurrentSpendings","Dashboard","addFormIsVisible","fileSelector","initFileSelector","setAttribute","onchange","handleFileUpload","newSpending","addSpending","click","files","reader","FileReader","onload","json","JSON","parse","result","onerror","err","console","log","readAsText","dashboard_Tiles","src_dashboard_Calender","dashboard_AddForm","Analytics","unit","subYears","dataTotals","updateChart","startOf","endOf","dateFormat","datesEach","eachDay","startOfDay","endOfDay","startOfWeek","startOfMonth","startOfYear","dateStart","dateEnd","getSpendingsBetween","optionsCats","optionsUnits","handleUnit","handleDate1","handleDate2","margin","right","bottom","strokeDasharray","updateCurrency","updateLocale","curr","localeOptions","loc","categoryTbl","rowSpan","Sidebar","displayTitleDashboard","displayTitleAnalytics","displayTitleSettings","distanceTop","window","handleSidebarPosition","scrollTop","documentElement","body","stateItem","onMouseEnter","toggleNavTitle","onMouseLeave","react_router_dom","to","Main","componentUnmount","bind","cats","spendingsArray","shouldOverwrite","newData","oldData","set","saveSpendings","src_Header","src_Sidebar","react_router","exact","path","component","Settings","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","defaults","onlySameWeek","onlySameMonth","onlySameYear","weekStartsOn","getFullYear","getSpendings","createStore","render","es","src_Main","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fa9cd091.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport uuidv4 from 'uuid/v4';\n\nconst ADD_SPENDING = 'ADD_SPENDING';\nconst ADD_SPENDINGS = 'ADD_SPENDINGS';\nconst UPDATE_CURRENCY = 'UPDATE_CURRENCY';\nconst UPDATE_LOCALE = 'UPDATE_LOCALE';\n\n// action creators\nexport const addSpending = (spending) => {\n    return {\n        type: ADD_SPENDING,\n        ...spending\n    };\n};\n\nexport const addSpendings = (spendings) => {\n    return {\n        type: ADD_SPENDINGS,\n        spendings\n    };\n};\n\nexport const updateCurrency = (currency) => {\n    return {\n        type: UPDATE_CURRENCY,\n        currency\n    };\n};\n\nexport const updateLocale = (locale) => {\n    return {\n        type: UPDATE_LOCALE,\n        locale\n    };\n};\n\n// reducers\nconst spendingsReducer = (state = [], action) => {\n    switch(action.type) {\n        case ADD_SPENDING : {\n            return [\n                ...state,\n                {\n                    id: action.id ? action.id : uuidv4(),\n                    day: action.day,\n                    cat: action.cat,\n                    amount: action.amount,\n                    comment: action.comment,\n                    dateAdded: action.dateAdded ? action.dateAdded : new Date()\n                }\n            ];\n        }\n        case ADD_SPENDINGS : {\n            return [\n                ...state,\n                ...action.spendings\n            ];\n        }\n        default :\n            return state;\n    }\n};\n\nconst settingsReducer = (state = [], action) => {\n    switch(action.type) {\n        case UPDATE_CURRENCY : {\n            return { \n                ...state,\n                currency: action.currency\n            };\n\n        }\n        case UPDATE_LOCALE : {\n            return {\n                ...state,\n                locale: action.locale\n            };\n        }\n        default :\n            return state;\n    }\n\n};\n\nexport let rootReducer = combineReducers({\n    spendings: spendingsReducer,\n    settings: settingsReducer\n});","import uuidv4 from 'uuid/v4';\nimport addMonths from 'date-fns/add_months';\nimport { endOfMonth, isBefore, endOfWeek, addWeeks, endOfYear, addYears, \n    isSameDay, isSameWeek, isSameMonth, isSameYear } from 'date-fns';\n\n// Used for generating some random spendings\nconst TEMPLATES = {\n    food: { \n        share: 0.25,\n        items: [\n            { comment: 'Groceries', min: 3, max: 100 },\n            { comment: 'Drinks', min: 2, max: 30 },\n            { comment: 'Döner', min: 2.50, max: 5 }\n        ]\n    },\n    coffeeshop: { \n        share: 0.2,\n        items: [\n            { comment: 'Coffee', min: 1, max: 2.50 },\n            { comment: 'Coffee & cake', min: 4, max: 8 },\n            { comment: 'Capuccino', min: 2.50, max: 3.50 },\n            { comment: 'Drink at bar', min: 3, max: 10 }\n        ]\n    },\n    household: { \n        share: 0.2,\n        items: [\n            { comment: 'Bicycle repair', min: 50, max: 100 },\n            { comment: 'Vacuum cleaner bags', min: 5, max: 20 },\n            { comment: 'Detergents', min: 1, max: 10 },\n            { comment: 'Bed linen', min: 10, max: 50 },\n            { comment: 'Cosmetics', min: 0.5, max: 10 },\n            { comment: 'Toothbrush', min: 1, max: 3 },\n            { comment: 'Bank fees', min: 1, max: 5 }\n        ]\n    },\n    culture: { \n        share: 0.1,\n        items: [\n            { comment: 'Book', min: 2, max: 25 },\n            { comment: 'Cinema', min: 5, max: 9 },\n            { comment: 'Theater', min: 8, max: 40 },\n            { comment: 'Library membership', min: 10, max: 15 }\n        ]\n    },\n    clothes: {\n        share: 0.05,\n        items: [\n            { comment: 'Present', min: 5, max: 50 },\n            { comment: 'Donation', min: 5, max: 50 }\n        ]\n    },\n    transport: {\n        share: 0.15,\n        items: [\n            { comment: 'Public transport ticket', min: 1.30, max: 5.40 },\n            { comment: 'Train ticket', min: 5, max: 70 },\n            { comment: 'Flight', min: 30, max: 100 },\n            { comment: 'Petrol', min: 10, max: 50 }\n        ]\n    },\n    gifts: {\n        share: 0.05,\n        items: [\n            { comment: 'Present', min: 5, max: 50 },\n            { comment: 'Donation', min: 5, max: 50 }\n        ]\n    }\n};\n\nconst Utils = {\n\n    filterSpendingsByDay(spendings, day) {\n        if(!spendings || !day) {\n            return [];\n        }\n\n        return spendings.filter(item => isSameDay(new Date(item.day), day)); \n    },\n\n    filterSpendingsByWeek(spendings, day) {\n        if(!spendings || !day) {\n            return [];\n        }\n\n        return spendings.filter(item => isSameWeek(new Date(item.day), day)); \n    },\n\n    filterSpendingsByMonth(spendings, day) {\n        if(!spendings || !day) {\n            return [];\n        }\n\n        return spendings.filter(item => isSameMonth(new Date(item.day), day)); \n    },\n\n    filterSpendingsByYear(spendings, day) {\n        if(!spendings || !day) {\n            return [];\n        }\n\n        return spendings.filter(item => isSameYear(new Date(item.day), day)); \n    },\n\n    /**\n     * Filters array of spending positions by their category.\n     * @param {Array} spendings objects with spending positions\n     * @param {String} category \n     */\n    filterSpendingsByCategory(spendings, category) {\n        if(!spendings || spendings.length === 0) {\n            return [];\n        }\n        return spendings.filter(item => item.cat === category); \n    },\n\n    calculateTotalAmountByCategory(spendings, category) {\n        if(!spendings || spendings.length === 0) {\n            return 0;\n        }\n\n        return spendings.filter(item => item.cat === category)\n                        .map(item => item.amount)\n                        .reduce((prevAmount, nextAmount) => prevAmount + nextAmount, 0);  \n    },\n\n    calculateTotalAmountsByCategories(spendings, categories) {\n        if(!categories || !spendings) {\n            return [];\n        }\n\n        return categories.map(cat => {\n            let amountByCat = this.calculateTotalAmountByCategory(spendings, cat.value);\n            return {\n                cat: cat.value,\n                amount: Math.round(amountByCat)\n            };\n        });\n    },\n\n    calculateSumOfSpendings(spendings) {\n        if(!spendings || spendings.length === 0) {\n            return 0;\n        }\n        return spendings.map(item => item.amount).reduce((prev, next) => prev + next, 0);\n    },\n\n    dateInEachWeek(dateFrom, dateTo) {\n        let dates = [];\n        let dateToEnd = endOfWeek(dateTo);\n        while(isBefore(dateFrom, dateToEnd)) {\n            dates.push(dateFrom);\n            dateFrom = addWeeks(dateFrom, 1);\n        }\n        return dates;\n    },\n\n    dateInEachMonth(dateFrom, dateTo) {\n        let dates = [];\n        let dateToEnd = endOfMonth(dateTo);\n        while(isBefore(dateFrom, dateToEnd)) {\n            dates.push(dateFrom);\n            dateFrom = addMonths(dateFrom, 1);\n        }\n        return dates;\n    },\n\n    dateInEachYear(dateFrom, dateTo) {\n        let dates = [];\n        let dateToEnd = endOfYear(dateTo);\n        while(isBefore(dateFrom, dateToEnd)) {\n            dates.push(dateFrom);\n            dateFrom = addYears(dateFrom, 1);\n        }\n        return dates;\n    },\n\n    /**\n     * Generates and returns random spendings within a given time span.\n     * Currently works only with default categories!\n     * \n     * // TODO generalise code for any categories\n     * \n     * @param {Number} count number of spendings to be generated\n     * @param {Date} startDate start of time span\n     * @param {Date} endDate end of time span\n     */\n    generateRandomData(count, startDate, endDate) {\n        let randomSpendings = [];\n        for(let i = 0; i < count; i++) {\n            const rand = Math.random();\n            const catKeys = Object.keys(TEMPLATES);\n            let accumulatedProb = 0; // accumulate shares of categories\n\n            for(let j = 0; j < catKeys.length; j++) {\n                accumulatedProb += TEMPLATES[catKeys[j]].share;\n                if(rand < accumulatedProb) {\n                    // generate spending for current category\n                    randomSpendings.push(this.createRandomSpending(catKeys[j], startDate, endDate));\n                    break;\n                }   \n            }\n        }\n        return randomSpendings;\n    },\n\n    /**\n     * Calculates and returns a random date in a given time span.\n     * @param {Date} start earlierst date of time span\n     * @param {Date} end latest date of time span\n     */\n    getRandomDate(start, end) {\n        return new Date(+start + Math.random() * (end - start));\n    },\n\n    /**\n     * Generates and returns random array index \n     * (= an integer form 0 to arrray.length).\n     * @param {Number} length of array\n     */\n    getRandomIndex(length) {\n        return Math.floor(Math.random() * length);\n    },\n\n    /**\n     * Generates random decimal number between min and max.\n     * @param {Number} min \n     * @param {Number} max \n     */\n    getRandomAmount(min, max) {\n        return (Math.random() * (max - min)) + min;\n    },\n\n    createRandomSpending(category, startDate, endDate) {\n        let index = this.getRandomIndex(TEMPLATES[category].items.length);\n        let item = TEMPLATES[category].items[index];\n        return {\n            id: uuidv4(),\n            day: this.getRandomDate(startDate, endDate),\n            cat: category,\n            amount: this.getRandomAmount(TEMPLATES[category].items[index].min, TEMPLATES[category].items[index].max),\n            comment: item.comment,\n            dateAdded: new Date()\n        };\n    }\n};\n\nexport default Utils;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Box } from 'react-feather';\nimport subMonths from 'date-fns/sub_months';\nimport Utils from './utils/Utils';\nimport { addSpendings } from './utils/ReduxStore';\n\nconst mapDispatchToProps = dispatch => ({ \n    addSpendings: spendings => dispatch(addSpendings(spendings))\n});\n\nfunction Header(props) {\n    const today = new Date();\n    const someTimeAgo = subMonths(today, 3);\n    const randomSpendings = Utils.generateRandomData(150, someTimeAgo, today);\n\n    return (\n        <header>   \n            <div className=\"wrapper-generate-btn\">\n                <button id=\"generate-btn\" onClick={() => props.addSpendings(randomSpendings)}>Generate random data</button>\n            </div>\n            <Box className=\"nav-icon nav-icon\" /> \n        </header>\n    );\n}\n\nHeader.propTypes = {\n    addSpendings: PropTypes.func.isRequired\n};\n\nexport default connect(null, mapDispatchToProps)(Header);","export const Constants = {\n    LOCALE_DECIMAL_OPTIONS: { \n        style: 'decimal', \n        minimumFractionDigits: 2, \n        maximumFractionDigits: 2 \n    },\n    DATE_FORMAT: 'DD MMM YYYY',\n    DATE_FORMAT_SHORT: 'DD.MM.YYYY',\n    DATE_FORMAT_INPUT: 'YYYY-MM-DD',\n    FIRST_DAY_WEEK: 1, // 0: Sunday, 1: Monday\n    TIME_UNITS: ['day', 'week', 'month', 'year'],\n    \n    CURRENCIES: [\n        { name: 'Euro', code: 'EUR', symbol: '€' },\n        { name: 'US Dollar', code: 'USD', symbol: '$' },\n        { name: 'British Pound', code: 'GBP', symbol: '£' }\n    ],\n    LOCALES: ['de-DE', 'en-US', 'en-UK'],\n\n    DEFAULT_CURRENCY_OPTIONS: {\n        style: 'currency',\n        currency: 'EUR',\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n    },\n    DEFAULT_LOCALE: 'de-DE',\n    DEFAULT_CURRENCY: 'EUR',\n    DEFAULT_CATEGORIES: [{ label: 'Food', value: 'food', descr: '', color: '#7E6258' },\n        { label: 'Coffee Shops, Bars & Restaurants', value: 'coffeeshop', descr: '', color: '#3EAC9A' },\n        { label: 'Household', value: 'household', descr: '', color: '#AC633E' },\n        { label: 'Culture', value: 'culture', descr: '', color: '#58747E' },\n        { label: 'Clothes', value: 'clothes', descr: '', color: '#3EAC63' },\n        { label: 'Transport', value: 'transport', descr: '', color: '#7E7558' },\n        { label: 'Gifts & Donations', value: 'gifts', descr: '', color: '#AC9A3E' }]\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Constants } from '../utils/Constants';\nimport './TooltipAmountDay.scss';\n\nconst mapStateToProps = (state) => ({ \n    currency: state.settings.currency,\n    locale: state.settings.locale \n});\n\n/**\n * Displays amount spent on a day when hovering over specific day\n * in the DayPicker\n */\nfunction TooltipAmountDay(props)  {\n    return (\n        <div className=\"hover-total-amount-day\" style={props.style}>\n            {props.amount.toLocaleString(props.locale, { ...Constants.DEFAULT_CURRENCY_OPTIONS, ...{ currency: props.currency }})}\n        </div>\n    ); \n}\n\nTooltipAmountDay.propTypes = {\n    style: PropTypes.object.isRequired,\n    amount: PropTypes.number.isRequired,\n    currency: PropTypes.string.isRequired,\n    locale: PropTypes.string.isRequired\n};\n\nexport default connect(mapStateToProps)(TooltipAmountDay);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DayPicker from 'react-day-picker';\nimport TooltipAmountDay from './TooltipAmountDay';\nimport { Constants } from '../utils/Constants';\nimport Utils from './../utils/Utils';\nimport './Calender.scss';\nimport 'react-day-picker/lib/style.css';\n\nconst mapStateToProps = (state) => ({ spendings: state.spendings });\n\nclass Calender extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            daysWithSpendings: this.getDaysWithSpendings()\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.spendings.length !== this.props.spendings.length) {\n            // update amounts when new spending(s) are added \n            this.updateDaysWithSpendings();\n        }\n    }\n\n    displayAmountSpent(day, modifiers, e) {\n        day = day.getDate();\n        const dayState = this.state.daysWithSpendings[day];\n        if(dayState) {\n            dayState.style = { top: e.pageY, left: e.pageX-50 };\n            this.setState({ daysWithSpendings: {...this.state.daysWithSpendings, ...{ [day]: dayState } } });\n        }\n    }\n\n    hideAmountSpent(day) {\n        day = day.getDate();\n        const dayState = this.state.daysWithSpendings[day];\n        if(dayState) {\n            dayState.style = { display: 'none' };\n            this.setState({ daysWithSpendings: {...this.state.daysWithSpendings, ...{ [day]: dayState } } });\n        }\n    }\n\n    getDaysWithSpendings(date) {\n        date = date ? date : this.props.selectedDay;\n        // get all spendings of current month\n        const spendingsMonth = Utils.filterSpendingsByMonth(this.props.spendings, date);\n        // get all days on which sth. was spent in this month and add up amounts\n        const daysWithSpendings = {};\n        spendingsMonth.forEach(spending => {\n            const day = new Date(spending.day).getDate();\n            if(!daysWithSpendings[day]) {\n                daysWithSpendings[day] = { \n                    date: new Date(spending.day),\n                    amount: spending.amount,\n                    style: { display: 'none' } \n                };\n            } else {\n                daysWithSpendings[day].amount += spending.amount;\n            }\n        });\n\n        return daysWithSpendings;\n    }\n\n    updateDaysWithSpendings(date) {\n        this.setState({ daysWithSpendings: this.getDaysWithSpendings(date) });\n    }\n\n    render() {\n        const modifiers = {\n            weekend: { daysOfWeek: [6, 0] },\n            today: new Date(),\n            selectedDay: this.props.selectedDay,\n            dayWithSpending: Object.values(this.state.daysWithSpendings).map(item => item.date)\n        };\n        const modifiersStyles = {\n            today : {\n                color: '#58747E'\n            },\n            weekend: {\n                color: '#7E6258'\n            },\n            selectedDay: {\n                color: 'white',\n                backgroundColor: '#7E6258',\n            },\n            dayWithSpending: {\n                fontWeight: 'bold'\n            }\n        };\n\n\n        const tooltips = Object.keys(this.state.daysWithSpendings).map(day =>\n            (<TooltipAmountDay \n                key={day} \n                amount={this.state.daysWithSpendings[day].amount} \n                style={this.state.daysWithSpendings[day].style} \n            />)\n        );\n\n        return (\n            <div id=\"calender\" className=\"box\">\n                <DayPicker\n                    todayButton=\"Today\"\n                    firstDayOfWeek={Constants.FIRST_DAY_WEEK}\n                    modifiers={modifiers}\n                    modifiersStyles={modifiersStyles}\n                    onDayClick={this.props.updateSelectedDay}\n                    onDayMouseEnter={(day, mod, e) => this.displayAmountSpent(day, mod, e)}\n                    onDayMouseLeave={(day, mod, e) => this.hideAmountSpent(day, mod, e)} \n                    onMonthChange={(date) => this.updateDaysWithSpendings(date)}\n                />\n\n                <div>\n                    {tooltips}\n                </div>\n\n                <div className=\"box add-actions\">\n                    <span className=\"add-action\" onClick={this.props.openAddModal}>\n                        <button className=\"add-pos-btn\">+</button> \n                        Add spending\n                    </span>\n                    <span className=\"add-action\" onClick={this.props.openImportModal}>\n                        <button className=\"add-pos-btn\">+</button>\n                        Import from JSON\n                    </span>\n                </div> \n            </div>  \n        );\n    }\n}\n\nCalender.propTypes = {\n    selectedDay: PropTypes.instanceOf(Date).isRequired,\n    updateSelectedDay: PropTypes.func.isRequired,\n    openAddModal: PropTypes.func.isRequired,\n    openImportModal: PropTypes.func.isRequired,\n    spendings: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default connect(mapStateToProps)(Calender);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport dateFnsFormat from 'date-fns/format';\nimport { Constants } from '../utils/Constants';\nimport './AddForm.scss';\n\nconst mapStateToProps = (state) => ({ \n    categories: state.settings.categories,\n    locale: state.settings.locale\n });\n\nclass SpendingsForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.nodeRef = React.createRef();\n        this.state = {\n            valDay: this.initDay(),\n            valCategory: 'food',\n            valAmount: '',\n            valComment: '',\n            showParsingError: false\n        };\n    }\n\n    componentDidMount() {\n        // add event listener for clicks outside of form\n        document.addEventListener('click', (e) => this.handleClickOutideForm(e));\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', (e) => this.handleClickOutideForm(e));\n    }\n\n    handleClickOutideForm(e) {\n        if(this.nodeRef.current && !this.nodeRef.current.contains(e.target)) {\n            this.props.onClose();\n        } \n    }\n\n    initDay() {\n        if (this.props.selectedDay) {\n            return dateFnsFormat(this.props.selectedDay, Constants.DATE_FORMAT_INPUT);\n        }\n        return null;\n    }\n\n    handleDay(e) {\n        this.setState({ valDay: e.target.value });\n    }\n\n    handleCategory(e) {\n        this.setState({ valCategory: e.target.value });\n    }\n\n    handleAmount(e) {\n        this.setState({ valAmount: e.target.value.replace(',', '.') });\n    }\n\n    handleComment(e) {\n        this.setState({ valComment: e.target.value });\n    }\n\n    handleFormInput(e) {\n        e.preventDefault();\n        let amount = parseFloat(this.state.valAmount);\n        if(isNaN(amount)) {\n            this.setState({ showParsingError: true });\n        } else {\n            this.setState({ showParsingError: false });\n            this.props.addSpendingsPosition(this.state.valCategory, amount, this.state.valComment, this.state.valDay);\n        }\n        this.setState({ valComment: '', valAmount: '' });\n    }\n\n    handleFormInputAndClose(e) {\n        this.handleFormInput(e);\n        this.props.onClose();\n    }\n\n    render() {\n        let categories = this.props.categories.map((cat) => {\n            return (\n                <option key={cat.value} value={cat.value}>{cat.label}</option>\n            );\n        });\n\n        const styleErrorInput = { \n            border: 'solid 1px red',\n            backgroundColor: '#ffe6e6' \n        };\n        const styleErrorTooltip = { \n            display: this.state.showParsingError ? 'inline' : 'none'\n        };\n        const msgError = 'Please enter a correct value';\n\n        return (\n            <div id=\"add-modal\" ref={this.nodeRef}>\n                <div id=\"tooltip-error\" style={styleErrorTooltip}>{msgError}</div>\n                <button className=\"close-X\" onClick={this.props.onClose}>x</button>\n\n                <form id=\"add-form\">\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>Date: </td>\n                                <td><input type=\"date\" \n                                           value={this.state.valDay} \n                                           onChange={(e) => this.handleDay(e)} /></td>\n                            </tr>\n                            <tr>\n                                <td>Category: </td>\n                                <td><select value={this.valCategory} onChange={(e) => this.handleCategory(e)}>{categories}</select></td>\n                            </tr>\n                            <tr>\n                                <td>Amount spent: </td>\n                                <td>\n                                    <input type=\"text\" \n                                           style={this.state.showParsingError ? styleErrorInput : {}}\n                                           value={this.state.valAmount.toLocaleString(this.props.locale, Constants.LOCALE_DECIMAL_OPTIONS)} \n                                           onChange={(e) => this.handleAmount(e)} \n                                           />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Comment: </td>\n                                <td>\n                                    <input type=\"text\" \n                                           maxLength=\"150\" \n                                           value={this.state.valComment} \n                                           onChange={(e) => this.handleComment(e)} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td></td>\n                                <td>\n                                    <input type=\"submit\" onClick={(e) => this.handleFormInput(e)} value=\"Submit + Add next\"/>\n                                    <input type=\"submit\" onClick={(e) => this.handleFormInputAndClose(e)} value=\"Submit + Close\"/>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </form>\n            </div>\n        );\n    }\n}\n\nSpendingsForm.propTypes = {\n    selectedDay: PropTypes.instanceOf(Date).isRequired,\n    locale: PropTypes.string.isRequired,\n    categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n    addSpendingsPosition: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps)(SpendingsForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport dateFnsFormat from 'date-fns/format';\nimport Utils from '../../utils/Utils';\nimport { Constants } from '../../utils/Constants';\nimport './Tiles.scss';\n\nconst mapStateToProps = (state) => ({ \n    spendings: state.spendings,\n    categories: state.settings.categories,\n    locale: state.settings.locale\n});\n\nclass SpendingsSingleDay extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            catExpandedView: this.initStateObject()\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // When selected day changes, only categories are displayed, \n        // single spending positions are collapsed\n        if (nextProps.spendingsForDay !== this.props.spendingsForDay) {\n            this.setState({ catExpandedView: this.initStateObject() });\n        }\n    }\n\n    initStateObject() {\n        let stateExpandedView = {};\n        this.props.categories.forEach((cat) => {\n            stateExpandedView[cat.value] = this.props.onlyToday ? true : false;\n        });\n        return stateExpandedView;\n    }\n\n    toggleDisplayAllPositionsForCat(cat) {\n        let updatedCatState = this.state.catExpandedView;\n        updatedCatState[cat] = !this.state.catExpandedView[cat];\n        this.setState({ catExpandedView: updatedCatState });\n    }\n\n    renderTableBody(spendingsDay) {\n        return this.props.categories.map((cat) => {\n            let amountSpent = Utils.calculateTotalAmountByCategory(spendingsDay, cat.value);\n            let arrowClass = amountSpent > 0 ? (this.state.catExpandedView[cat.value] ? 'arrow-up' : 'arrow-down') : '';\n            return (\n                <tbody key={cat.value}>\n                    <tr>\n                        <td>{cat.label}</td>\n                        <td className=\"cell-amount\">{amountSpent.toLocaleString(this.props.locale, this.props.currencyOptions)}</td>\n                        <td className=\"arrow\"><span className={arrowClass} onClick={() => this.toggleDisplayAllPositionsForCat(cat.value)}></span></td>\n                    </tr>\n                    {this.renderSpendingsPositons(spendingsDay, cat.value)}\n                </tbody>\n            );\n        });\n    }\n\n    renderSpendingsPositons(spendingsDay, cat) {\n        let spendingPositions = Utils.filterSpendingsByCategory(spendingsDay, cat);\n        let displayExpanded = this.state.catExpandedView[cat] ? '' : 'none';\n\n        if (spendingPositions) {\n            return spendingPositions.map((item, i) => {\n                return (\n                    <tr key={cat+i} style={{display: displayExpanded}} className=\"font-small-colored\">\n                        <td>{item.comment}</td>\n                        <td className=\"cell-amount\">{item.amount.toLocaleString(this.props.locale, this.props.currencyOptions)}</td>\n                    </tr>\n                );\n            });\n        }\n    }\n    \n    render() {\n        let classes = this.props.fadeout ? 'tile fade-out' : 'tile';\n        const day = this.props.onlyToday ? new Date() : this.props.selectedDay;\n        const spendingsForDay = Utils.filterSpendingsByDay(this.props.spendings, day);\n        const total = Utils.calculateSumOfSpendings(spendingsForDay);\n        const title = this.props.onlyToday ? 'Today\\'s Spendings' : 'Spendings on ' + dateFnsFormat(this.props.selectedDay, Constants.DATE_FORMAT);\n        return( \n            <div className={classes}>\n                <button className=\"close-tile\" title=\"Close\" onClick={() => this.props.toggleDisplay('spendingsSingleDay')}>\n                    x\n                </button>\n                <h4>{title}</h4>\n                <table className=\"table-spendings\">  \n                    {this.renderTableBody(spendingsForDay)}    \n                    <tfoot>\n                        <tr>\n                            <td><b>Total</b></td>\n                            <td className=\"cell-amount\"><b>{total.toLocaleString(this.props.locale, this.props.currencyOptions)}</b></td>\n                        </tr>\n                    </tfoot>      \n                </table>\n            </div>\n        ); \n    }\n}\n\nSpendingsSingleDay.propTypes = {\n    selectedDay: PropTypes.instanceOf(Date),\n    locale: PropTypes.string.isRequired,\n    currencyOptions: PropTypes.object.isRequired,\n    totalAmountDay: PropTypes.number,\n    spendingsForDay: PropTypes.arrayOf(PropTypes.object),\n    categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n    toggleDisplay: PropTypes.func.isRequired,\n    onlyToday: PropTypes.bool.isRequired,\n    fadeout: PropTypes.bool.isRequired,\n    spendings: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default connect(mapStateToProps)(SpendingsSingleDay);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Utils from '../../utils/Utils';\nimport './Tiles.scss';\n\nconst mapStateToProps = (state) => ({ \n    spendings: state.spendings,\n    locale: state.settings.locale\n});\n\n/**\n * Shows total spendings of today, current week, month & year.\n */\nfunction TotalSpendings(props) {\n    let classes = props.fadeout ? 'tile fade-out' : 'tile';\n    const today = new Date();\n    const totalToday = Utils.calculateSumOfSpendings(Utils.filterSpendingsByDay(props.spendings, today));\n    const totalWeek = Utils.calculateSumOfSpendings(Utils.filterSpendingsByWeek(props.spendings, today));\n    const totalMonth = Utils.calculateSumOfSpendings(Utils.filterSpendingsByMonth(props.spendings, today));\n    const totalYear = Utils.calculateSumOfSpendings(Utils.filterSpendingsByYear(props.spendings, today));\n    return (\n        <div className={classes}>\n            <button className=\"close-tile\" title=\"Close\" onClick={() => props.toggleDisplay('totalSpendings')}>\n                x\n            </button>\n            <h4>Total Spendings</h4>\n            <table className=\"table-spendings\">\n                <tbody>\n                    <tr>\n                        <td>Today:</td>\n                        <td className=\"cell-amount\">{totalToday.toLocaleString(props.locale, props.currencyOptions)}</td>\n                    </tr>\n                    <tr>\n                        <td>This week:</td>\n                        <td className=\"cell-amount\">{totalWeek.toLocaleString(props.locale, props.currencyOptions)}</td>\n                    </tr>\n                    <tr>\n                        <td>This month:</td>\n                        <td className=\"cell-amount\">{totalMonth.toLocaleString(props.locale, props.currencyOptions)}</td>\n                    </tr>\n                    <tr>\n                        <td>This year:</td>\n                        <td className=\"cell-amount\">{totalYear.toLocaleString(props.locale, props.currencyOptions)}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nTotalSpendings.propTypes = {\n    locale: PropTypes.string.isRequired,\n    currencyOptions: PropTypes.object.isRequired,\n    toggleDisplay: PropTypes.func.isRequired,\n    fadeout: PropTypes.bool.isRequired,\n    spendings: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default connect(mapStateToProps)(TotalSpendings);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { PieChart, Pie, Legend, Cell } from 'recharts';\nimport Utils from '../../utils/Utils';\nimport './Tiles.scss';\n\nconst mapStateToProps = (state) => ({ \n    spendings: state.spendings,\n    categories: state.settings.categories\n});\n\nfunction CategoriesPieChart(props) {\n    const data = Utils.calculateTotalAmountsByCategories(props.spendings, props.categories);\n    let pieColors = [];\n    let chartData;\n\n    if(!data || data.length === 0) {\n        pieColors.push('#f1f4f4');\n        chartData = [{\n            name: 'No data available',\n            value: 1\n        }];\n    } else {\n        chartData = props.categories.map((cat, i) => {\n        pieColors.push(cat.color);\n        return { \n            name: cat.label.length <= 20 ? cat.label : cat.label.substring(0, 18) + '...',\n            value: data[i].amount };\n        });\n    }\n    let classes = props.fadeout ? 'tile fade-out' : 'tile';\n    return (\n        <div className={classes}>\n            <button className=\"close-tile\" title=\"Close\" onClick={() => props.toggleDisplay('catPieChart')}>\n                x\n            </button>\n            <h4>Spendings on Categories</h4>\n            <div id=\"piechart\">\n                <PieChart width={400} height={150}>\n                    <Pie cx={100} cy={70} isAnimationActive={true} data={chartData} outerRadius={65} fill=\"#58747E\" \n                        labelLine={false} label={false} dataKey=\"value\" nameKey=\"name\">\n                        {\n                            chartData.map((entry, i) => <Cell fill={pieColors[i]} key={i}/>)\n                        }\n                    </Pie>   \n                    <Legend layout=\"vertical\" align=\"right\" verticalAlign=\"top\" width={190} iconType=\"square\" iconSize={12}/>\n                </PieChart>  \n            </div>\n        </div>\n    );\n}\n\nCategoriesPieChart.propTypes = {\n    toggleDisplay: PropTypes.func.isRequired,\n    categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n    fadeout: PropTypes.bool.isRequired,\n    spendings: PropTypes.arrayOf(PropTypes.object)\n};\n\n\nexport default connect(mapStateToProps)(CategoriesPieChart);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport dateFnsFormat from 'date-fns/format';\nimport { Constants } from '../../utils/Constants';\nimport './Tiles.scss';\n\nconst mapStateToProps = (state) => ({ \n    spendings: state.spendings,\n    locale: state.settings.locale\n});\n\nfunction RecentHistory(props) {\n    const entries = props.spendings.slice(-15).reverse().map((pos, i) => {\n        return (\n            <tr key={i}> \n                <td className=\"align-left\">{dateFnsFormat(pos.day, Constants.DATE_FORMAT_SHORT)}</td>\n                <td>{pos.comment.length < 28 ? pos.comment : pos.comment.substring(0, 25) + '...'}</td>\n                <td className=\"font-small-colored align-right\">\n                    {pos.amount.toLocaleString(props.locale, props.currencyOptions)}\n                </td>\n            </tr>\n        );\n    });\n\n    let classes = props.fadeout ? 'tile fade-out' : 'tile';\n    return (\n        <div className={classes}>\n            <button className=\"close-tile\" title=\"Close\" onClick={() => props.toggleDisplay('recentHistory')}>\n                x\n            </button>\n            <h4>Recently Added Spendings</h4>\n            <table className=\"table-spendings-history\">\n                <tbody>\n                    {entries}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nRecentHistory.propTypes = {\n    locale: PropTypes.string.isRequired,\n    currencyOptions: PropTypes.object.isRequired,\n    spendings: PropTypes.arrayOf(PropTypes.object),\n    toggleDisplay: PropTypes.func.isRequired,\n    fadeout: PropTypes.bool.isRequired\n};\n\nexport default connect(mapStateToProps)(RecentHistory);","/**\n * Fetching data from local storage\n */\nimport uuidv4 from 'uuid/v4';\nimport store from 'store';\nimport { isSameDay, isSameWeek, isSameMonth } from 'date-fns';\nimport { Constants } from './Constants';\n\nconst KEY_SPENDINGS = 'spendings';\nconst KEY_CATEGORIES = 'categories';\nconst KEY_CURRENCY = 'currency';\nconst KEY_LOCALE = 'locale';\nconst KEY_RECURRENT_SPENDINGS = 'recurrentSpending';\n\n /**\n  * Returns spending positons from local storage that were spent \n  * on the same day / in the same year, month, or week as the reference date.\n  * If no parameter is given, all spendings will be returned.\n  * If only date is given, all spendings from the same day will be returned.\n  * \n  * @param {Date} date reference date\n  * @param {Boolean} onlySameWeek \n  * @param {Boolean} onlySameMonth \n  * @param {Boolean} onlySameYear \n  */\n export function getSpendings(date, onlySameWeek, onlySameMonth, onlySameYear) {\n    let data = store.get(KEY_SPENDINGS);\n    if(!data) { \n        return []; \n    }\n\n    if(arguments.length === 0) {\n        return data;\n    }\n\n    if(arguments.length === 1) {\n        return data.filter(item => isSameDay(new Date(item.day), date));\n    }\n\n    if(onlySameWeek === true) {\n        return data.filter(item => isSameWeek(new Date(item.day), date, { weekStartsOn: Constants.FIRST_DAY_WEEK }));\n    }\n\n    if(onlySameMonth === true) {\n        return data.filter(item => isSameMonth(new Date(item.day), date));\n    }\n\n    if(onlySameYear === true) {\n        return data.filter(item => new Date(item.day).getFullYear() === date.getFullYear());\n    }\n\n    return data;\n}\n\n/**\n * Returns spendings postions after and/or before a certain date.\n * If neither start date nor end date is specified, an empty array is returned.\n * \n * @param {Date} dateStart (optional)\n * @param {Date} dateEnd (optinal)\n * @param {String} category (optional)\n * @param {Number} count number of positions that should be returned (optional)\n */\nexport const getSpendingsBetween = (dateStart, dateEnd, category, count) => {\n    if(!dateStart && !dateEnd) { \n        return []; \n    }\n    let data = store.get(KEY_SPENDINGS);\n    if(!data) { \n        return []; \n    }\n\n    if(dateStart) {\n        data = data.filter(item => new Date(item.day) >= dateStart);\n    }\n\n    if(dateEnd) {\n        data = data.filter(item => new Date(item.day) <= dateEnd);\n    }\n\n    if(category) {\n        data = data.filter(item => item.cat === category);\n    }\n\n    return count ? data.slice(0, count) : data;\n};\n\nexport const postSpendingPosition = (pos) => {\n    let data = store.get(KEY_SPENDINGS);\n    if(!data) { \n        data = []; \n    }\n    data.push({\n        id: pos.id ? pos.id : uuidv4(),\n        day: pos.day,\n        cat: pos.cat,\n        amount: pos.amount,\n        comment: pos.comment,\n        dateAdded: pos.dateAdded ? pos.dateAdded : new Date()\n    });\n    \n    store.set(KEY_SPENDINGS, data);\n};\n\nexport const saveSpendings = (spendingsArray, shouldOverwrite) => {\n    if(!spendingsArray || spendingsArray.length === 0) {\n        return;\n    }\n\n    let newData;\n    if(shouldOverwrite) {\n        newData = spendingsArray;\n    } else {\n        let oldData = store.get(KEY_SPENDINGS) || [];\n        newData = [...oldData, ...spendingsArray];\n    }\n    store.set(KEY_SPENDINGS, newData);\n};\n\nexport const loadCurrency = () => {\n    return store.get(KEY_CURRENCY);\n};\n\nexport const saveCurrency = (currency) => {\n    store.set(KEY_CURRENCY, currency);\n};\n\nexport const loadLocale = () => {\n    return store.get(KEY_LOCALE);\n};\n\nexport const saveLocale = (locale) => {\n    store.set(KEY_LOCALE, locale);\n};\n\nexport const loadCategories = () => {\n    return store.get(KEY_CATEGORIES);\n};\n\nexport const saveCategories = (cats) => {\n    store.set(KEY_CATEGORIES, cats);\n};\n\nexport const getRecurrentSpendings = () => {\n    const recSpendings = store.get(KEY_RECURRENT_SPENDINGS);\n    if(!recSpendings) { \n        return []; \n    }\n};\n\nexport const postRecurrentSpending = (recurrentSpending) => {\n    let recSpendings = store.get(KEY_RECURRENT_SPENDINGS);\n    if(!recSpendings) { \n        recSpendings = []; \n    }\n    recSpendings.push({\n        startDate: recurrentSpending.startDate ? recurrentSpending.startDate : new Date(),\n        interval: recurrentSpending.interval,\n        amount: recurrentSpending.amount,\n        cat: recurrentSpending.cat,\n        comment: recurrentSpending.comment\n    });\n    \n    store.set(KEY_RECURRENT_SPENDINGS, recurrentSpending);\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport dateFnsFormat from 'date-fns/format';\nimport { Constants } from '../../utils/Constants';\nimport { getRecurrentSpendings } from '../../utils/LocalStore';\nimport './Tiles.scss';\n\nconst mapStateToProps = (state) => ({ locale: state.settings.locale });\n\nfunction RecurrentSpendings(props) {\n    const recurrentSp = getRecurrentSpendings();\n    const entries = recurrentSp.map((rs, i) => {\n        return (\n            <tr key={i}> \n                <td className=\"align-left\">{dateFnsFormat(rs.startDate, Constants.DATE_FORMAT_SHORT)}</td>\n                <td>{rs.interval}</td>\n                <td>{rs.comment.length < 28 ? rs.comment : rs.comment.substring(0, 25) + '...'}</td>\n                <td className=\"font-small-colored align-right\">\n                    {rs.amount.toLocaleString(props.locale, props.currencyOptions)}\n                </td>\n            </tr>\n        );\n    });\n\n    const tbleHead = entries.length > 0 ? \n                        (<tr>\n                            <td> Since </td>\n                            <td> Interval </td>\n                            <td> Description </td>\n                            <td> Amount </td>\n                        </tr>) \n                        : <tr><td>No recurrent spendings found</td></tr>;\n\n    let classes = props.fadeout ? 'tile fade-out' : 'tile';\n    return (\n        <div className={classes}>\n            <button className=\"close-tile\" title=\"Close\" onClick={() => props.toggleDisplay('recurrentSpendings')}>\n                x\n            </button>\n            <h4>Recurrent Spendings</h4>\n            <table className=\"table-spendings-history\">\n                <thead>\n                    {tbleHead}\n                </thead>\n                <tbody>\n                    {entries}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nRecurrentSpendings.propTypes = {\n    locale: PropTypes.string.isRequired,\n    currencyOptions: PropTypes.object.isRequired,\n    toggleDisplay: PropTypes.func.isRequired,\n    fadeout: PropTypes.bool.isRequired\n};\n\nexport default connect(mapStateToProps)(RecurrentSpendings);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport SpendingsSingleDay from './tiles/SpendingsSingleDay';\nimport TotalSpendings from './tiles/TotalSpendings';\nimport CategoriesPieChart from './tiles/CategoriesPieChart';\nimport RecentHistory from './tiles/RecentHistory';\nimport RecurrentSpendings from './tiles/RecurrentSpendings';\nimport { Constants } from '../utils/Constants';\nimport './tiles/Tiles.scss';\n\nconst mapStateToProps = (state) => ({ currency: state.settings.currency });\n\nclass Tiles extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            display : {\n                catPieChart: true,\n                spendingsSingleDay: true,\n                totalSpendings: true,\n                recentHistory: true,\n                recurrentSpendings: true\n            },\n            fadeout: {\n                catPieChart: false,\n                spendingsSingleDay: false,\n                totalSpendings: false,\n                recentHistory: false,\n                recurrentSpendings: false\n            }\n        };\n    }\n\n    toggleDisplay(tile) {\n        this.setState({ fadeout: {...this.state.fadeout, ...{[tile] : !this.state.fadeout[tile]} } });\n        setTimeout(() => {\n            this.setState({ display: {...this.state.display, ...{[tile] : !this.state.display[tile]} } });\n        }, 500);\n    }\n\n    render() {\n        let currencyOptions = { ...Constants.DEFAULT_CURRENCY_OPTIONS, ...{ currency: this.props.currency }};\n        return (\n            <div id=\"tiles\" className=\"box\">\n                {this.state.display.catPieChart && \n                    <CategoriesPieChart \n                        toggleDisplay={(t) => this.toggleDisplay(t)}\n                        fadeout={this.state.fadeout.catPieChart}\n                    />\n                }\n\n                {this.state.display.spendingsSingleDay &&\n                    <SpendingsSingleDay\n                        toggleDisplay={(t) => this.toggleDisplay(t)}\n                        currencyOptions={currencyOptions}\n                        fadeout={this.state.fadeout.spendingsSingleDay}\n                        onlyToday={true}\n                    />\n                }  \n\n                {this.state.display.totalSpendings &&\n                    <TotalSpendings \n                        toggleDisplay={(t) => this.toggleDisplay(t)}\n                        currencyOptions={currencyOptions}\n                        fadeout={this.state.fadeout.totalSpendings}\n                    />\n                }\n\n                {this.state.display.recentHistory &&\n                    <RecentHistory \n                        toggleDisplay={(t) => this.toggleDisplay(t)}\n                        currencyOptions={currencyOptions}\n                        fadeout={this.state.fadeout.recentHistory}\n                    />\n                }\n\n                {this.state.display.spendingsSingleDay &&\n                    <SpendingsSingleDay\n                        toggleDisplay={(t) => this.toggleDisplay(t)}\n                        currencyOptions={currencyOptions}\n                        fadeout={this.state.fadeout.spendingsSingleDay}\n                        onlyToday={false}\n                        selectedDay={this.props.selectedDay}\n                    />\n                }  \n\n                {this.state.display.recurrentSpendings &&\n                    <RecurrentSpendings \n                        toggleDisplay={(t) => this.toggleDisplay(t)}\n                        currencyOptions={currencyOptions}\n                        fadeout={this.state.fadeout.recurrentSpendings}\n                    />\n                } \n            </div>\n        );\n    }\n}\n\nTiles.propTypes = {\n    selectedDay: PropTypes.instanceOf(Date).isRequired,\n    currency: PropTypes.string\n};\n\nexport default connect(mapStateToProps)(Tiles);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport uuidv4 from 'uuid/v4';\nimport Calender from './dashboard/Calender';\nimport AddForm from './dashboard/AddForm';\nimport Tiles from './dashboard/Tiles';\nimport { addSpending } from './utils/ReduxStore';\nimport './dashboard/Dashboard.scss';\n\nconst mapDispatchToProps = dispatch => ({ \n    addSpending: spending => dispatch(addSpending(spending))\n});\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedDay: new Date(),\n            addFormIsVisible: false\n        };\n    }\n\n    componentDidMount() {\n        this.fileSelector = this.initFileSelector();\n    }\n\n    initFileSelector() {\n        const fileSelector = document.createElement('input');\n        fileSelector.setAttribute('type', 'file');\n        fileSelector.setAttribute('multiple', true);\n        fileSelector.onchange = this.handleFileUpload;\n        return fileSelector;\n    }\n\n    updateSelectedDay(day) {\n        this.setState({ selectedDay: day });\n    }\n\n    addSpendingsPosition(cat, amount, comment, day) {\n        const date = day ? new Date(day) : this.state.selectedDay;\n        const newSpending = {\n            id: uuidv4(),\n            day: date,\n            cat: cat,\n            amount: amount,\n            comment: comment\n        };\n        this.props.addSpending(newSpending);\n    }\n\n    openAddModal() {\n        this.setState({ addFormIsVisible: true });\n    }\n\n    openImportModal(e) {\n        e.preventDefault();\n        this.fileSelector.click();\n    }\n\n    handleFileUpload(e) {\n        e.preventDefault();\n        let files = e.target.files;\n        if(!files) {\n            console.log('No files to upload found');\n            return;\n        }\n\n        for(let i = 0; i < files.length; i++) {\n             if(files[i].type === 'application/json') {\n                 let reader = new FileReader();\n\n                 reader.onload = () => {\n                    let json = JSON.parse(reader.result);\n                    if(json && json.data) {\n                        json.data.forEach((item) => {\n                            this.addSpendingsPosition(item.cat, item.amount, item.comment, new Date(item.day));\n                        });\n                    } \n                 };\n\n                 reader.onerror = (err) => {\n                    console.log('error while reading file: ' + err); // TODO Display error msg\n                 };\n                 reader.readAsText(files[i]);\n             } else {\n                console.log('Error: File is not a JSON document...');\n                // TODO Display error msg\n            }\n        }\n    }\n\n    onClose() {\n        this.setState({\n            addFormIsVisible: false\n        });\n    }\n\n    render() {\n        return (\n            <div id=\"dashboard\" className=\"box\">\n                    <Tiles \n                        selectedDay={this.state.selectedDay}\n                    />\n\n                    <Calender\n                        selectedDay={this.state.selectedDay}\n                        updateSelectedDay={(day) => this.updateSelectedDay(day)}\n                        openAddModal={() => this.openAddModal()}  \n                        openImportModal={(e) => this.openImportModal(e)}  \n                    />\n\n                    {this.state.addFormIsVisible &&\n                        <AddForm \n                            selectedDay={this.state.selectedDay}\n                            addSpendingsPosition={(cat, amount, comment, day) => this.addSpendingsPosition(cat, amount, comment, day)} \n                            onClose={() => this.onClose()}\n                        /> \n                    }\n                \n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    addSpending: PropTypes.func.isRequired\n};\n\nexport default connect(null, mapDispatchToProps)(Dashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid } from 'recharts';\nimport { subYears, startOfDay, startOfWeek, startOfMonth, startOfYear,\n endOfDay, endOfWeek, endOfMonth, endOfYear, eachDay } from 'date-fns';\nimport dateFnsFormat from 'date-fns/format';\nimport { Constants } from './utils/Constants';\nimport { getSpendingsBetween} from './utils/LocalStore';\nimport Utils from './utils/Utils';\n\nconst FORMAT_DAY = 'DD.MM.';\nconst FORMAT_WEEK = 'W';\nconst FORMAT_MONTH = 'MMM';\nconst FORMAT_YEAR = 'YYYY';\n\nconst mapStateToProps = (state) => ({ categories: state.settings.categories });\n\nclass Analytics extends Component {\n    constructor(props) {\n        super(props);\n        const today = new Date();\n        this.state = {\n            unit: 'month',\n            category: 'all',\n            dateFrom: dateFnsFormat(subYears(today, 1), Constants.DATE_FORMAT_INPUT),\n            dateTo: dateFnsFormat(today, Constants.DATE_FORMAT_INPUT),\n            dataTotals: []\n        };\n    }\n\n    componentDidMount() {\n        this.updateChart();\n    }\n\n    handleUnit(e) {\n        this.setState({ unit: e.target.value });\n    }\n\n    handleCategory(e) {\n        this.setState({ category: e.target.value });\n    }\n\n    handleDate1(e) {\n        this.setState({ dateFrom: e.target.value });\n    }\n\n    handleDate2(e) {\n        this.setState({ dateTo: e.target.value });\n    }\n\n    updateChart() {\n        let datesEach = [];\n        let startOf, endOf, dateFormat;\n\n        if(this.state.unit === 'day') {\n            datesEach = eachDay(this.state.dateFrom, this.state.dateTo);\n            startOf = startOfDay;\n            endOf = endOfDay;\n            dateFormat = FORMAT_DAY;\n        }\n        else if(this.state.unit === 'week') {\n            datesEach = Utils.dateInEachWeek(this.state.dateFrom, this.state.dateTo);\n            startOf = startOfWeek;\n            endOf = endOfWeek;\n            dateFormat = FORMAT_WEEK;\n        }\n        else if(this.state.unit === 'month') {\n            datesEach = Utils.dateInEachMonth(this.state.dateFrom, this.state.dateTo);\n            startOf = startOfMonth;\n            endOf = endOfMonth;\n            dateFormat = FORMAT_MONTH;\n        }\n        else if(this.state.unit === 'year') {\n            datesEach = Utils.dateInEachYear(this.state.dateFrom, this.state.dateTo);\n            startOf = startOfYear;\n            endOf = endOfYear;\n            dateFormat = FORMAT_YEAR;\n        }\n\n        let data = datesEach.map(date => {\n            const cat = this.state.category === 'all' ? undefined : this.state.category;\n            const spendings = getSpendingsBetween(startOf(date), endOf(date), cat);\n            const total = Utils.calculateSumOfSpendings(spendings);\n            return {\n                name: dateFnsFormat(date, dateFormat),\n                value: total\n            };\n        });\n        \n        this.setState({ dataTotals: data });\n    }\n\n    render() {\n        const optionsCats = this.props.categories.map(cat => (<option key={cat.value} value={cat.value}>{cat.label}</option>));\n        const optionsUnits = Constants.TIME_UNITS.map(unit => (<option key={unit} value={unit}>{unit}</option>));\n        return (\n            <div id=\"analytics\" className=\"box\">\n                <h1 className=\"menu-item-headline\">Analytics</h1>\n\n                <div className=\"border-dashed scroll-x-axis\">\n                    <h4>Totals</h4>\n                    <div className=\"setup\">\n                        <div>Unit:&nbsp;\n                            <select value={this.state.unit} onChange={(e) => this.handleUnit(e)}>{optionsUnits}</select>\n                        </div>\n                        <div>\n                            Time span:&nbsp;\n                            <input type=\"date\" value={this.state.dateFrom} onChange={(e) => this.handleDate1(e)}/>&nbsp;\n                            <input type=\"date\" value={this.state.dateTo} onChange={(e) => this.handleDate2(e)}/>\n                        </div>\n                        <div>Categories:&nbsp;\n                            <select value={this.state.category} onChange={(e) => this.handleCategory(e)}>\n                                <option value=\"all\">All</option>\n                                {optionsCats}     \n                            </select>\n                        </div>\n                        <div>\n                            <button onClick={() => this.updateChart()}>Update chart</button>\n                        </div>\n                    </div>\n                    <div className=\"chart\">\n                        <BarChart width={1000} height={300} data={this.state.dataTotals} margin={{top: 30, right: 30, left: 20, bottom: 5}}>\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\n                            <XAxis dataKey=\"name\"/>\n                            <YAxis/>\n                            <Bar dataKey=\"value\" fill=\"#7E6258\" />\n                        </BarChart>\n                    </div>\n                </div>\n                <div className=\"border-dashed\">\n                    <h4>Averages</h4>\n                    TODO\n                </div>\n                <div className=\"border-dashed\">\n                    <h4>Comparisons</h4>\n                    TODO\n                </div>\n            </div>\n        );\n    }\n}\n\nAnalytics.propTypes = {\n    categories: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default connect(mapStateToProps)(Analytics);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Constants } from './utils/Constants';\nimport { updateCurrency, updateLocale } from './utils/ReduxStore';\nimport './settings/TilesSettings.scss';\n\nconst mapStateToProps = (state) => ({ \n    currency: state.settings.currency,\n    locale: state.settings.locale,\n    categories: state.settings.categories  \n});\n\nconst mapDispatchToProps = dispatch => ({ \n    updateCurrency: e => dispatch(updateCurrency(e.target.value)),\n    updateLocale: e => dispatch(updateLocale(e.target.value))\n});\n\nfunction Settings(props) {\n    let currencyOptions = Constants.CURRENCIES.map(curr => \n        (<option key={curr.code} value={curr.code}>{curr.name} ({curr.symbol})</option>));\n\n    let localeOptions = Constants.LOCALES.map(loc => (<option key={loc} value={loc}>{loc}</option>));\n\n    let categoryTbl = props.categories.map(cat => (\n        <tr className=\"reducedPadding\" key={cat.value}>\n            <td><span className=\"font-small-colored\">{cat.label}</span></td>\n            <td><button className=\"btnDelete\" title=\"Delete\">X</button></td>\n        </tr>));\n\n    return (\n        <div id=\"settings\" className=\"box\">\n            <h1 className=\"menu-item-headline\">Settings</h1>\n                <div className=\"border-dashed\">\n                    <h4>Preferences</h4>\n                    <table>  \n                        <tbody>\n                            <tr>\n                                <td className=\"prefTitle\">Currency</td>\n                                <td><span className=\"font-small-colored\">{props.currency}</span></td>\n                                <td>\n                                    Update: <select value={props.currency} onChange={(e) => props.updateCurrency(e)}>{currencyOptions}</select>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"prefTitle\">Locale</td>\n                                <td><span className=\"font-small-colored\">{props.locale}</span></td>\n                                <td>\n                                    Update: <select value={props.locale} onChange={(e) => props.updateLocale(e)}>{localeOptions}</select>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td className=\"prefTitle\" rowSpan={categoryTbl.length + 1}>Categories</td>\n                            </tr>\n                            {categoryTbl}\n                        </tbody>\n                    </table> \n                </div>\n                <div className=\"border-dashed\">\n                    <h4>Recurrent Spendings</h4>\n                </div>\n        </div>\n    );\n}\n\nSettings.propTypes = {\n    currency: PropTypes.string.isRequired,\n    locale: PropTypes.string.isRequired,\n    categories: PropTypes.arrayOf(PropTypes.object),\n    updateCurrency: PropTypes.func.isRequired,\n    updateLocale: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Home, BarChart2, Settings } from 'react-feather';\nimport './style.scss';\n\nclass Sidebar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayTitleDashboard: false,\n            displayTitleAnalytics: false,\n            displayTitleSettings: false,\n            distanceTop: 55\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', () => this.handleSidebarPosition());\n    }\n\n    handleSidebarPosition() {\n        let scrollTop = (document.documentElement.scrollTop || document.body.scrollTop);\n        this.setState({ distanceTop: Math.max(55 - scrollTop, 0) });\n    }\n\n    toggleNavTitle(stateItem) {\n        this.setState({ [stateItem]: !this.state[stateItem] });\n    }\n\n    render() {\n        return(\n            <div id=\"sidebar\" style={{top: this.state.distanceTop}}>\n                <ul>\n                    <li onMouseEnter={() => this.toggleNavTitle('displayTitleDashboard')}\n                        onMouseLeave={() => this.toggleNavTitle('displayTitleDashboard')} >\n                        <Link to=\"/dashboard\">\n                            <Home \n                                width=\"27\"\n                                height=\"27\"\n                                className=\"nav-icon\"\n                            />\n                            <span className={this.state.displayTitleDashboard ? '' : 'hidden'}>Dashboard</span>               \n                        </Link>   \n                    </li> \n\n                    \n                    <li onMouseEnter={() => this.toggleNavTitle('displayTitleAnalytics')}\n                        onMouseLeave={() => this.toggleNavTitle('displayTitleAnalytics')} >\n                        <Link to=\"/analytics\">\n                            <BarChart2 \n                                width=\"27\"\n                                height=\"27\"\n                                className=\"nav-icon\"\n                            />\n                            <span className={this.state.displayTitleAnalytics ? '' : 'hidden'}>Analytics</span>\n                        </Link>\n                    </li>\n\n                    <li onMouseEnter={() => this.toggleNavTitle('displayTitleSettings')}\n                        onMouseLeave={() => this.toggleNavTitle('displayTitleSettings')} >\n                        <Link to=\"/settings\">\n                            <Settings \n                                width=\"27\"\n                                height=\"27\"\n                                className=\"nav-icon\"\n                            />\n                            <span className={this.state.displayTitleSettings ? '' : 'hidden'}>Settings</span>\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Dashboard from './Dashboard';\nimport Analytics from './Analytics';\nimport Settings from './Settings';\nimport Sidebar from './Sidebar';\nimport { saveSpendings, saveCurrency, saveLocale, saveCategories } from './utils/LocalStore';\nimport './style.scss';\n\nconst mapStateToProps = (state) => ({ \n    spendings: state.spendings,\n    currency: state.settings.currency,\n    locale: state.settings.locale,\n    categories: state.settings.categories  \n});\n\nclass Main extends Component {\n\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.componentUnmount.bind(this));\n    }\n\n    componentWillUnmount() {\n        this.componentUnmount();\n        window.removeEventListener('beforeunload', this.componentUnmount.bind(this));\n    }\n\n    componentUnmount() {\n        // save spendings from redux store to local storage when closing or reloading the page\n        saveSpendings(this.props.spendings, true);\n        saveCurrency(this.props.currency);\n        saveLocale(this.props.locale);\n        saveCategories(this.props.categories);\n    }\n\n    render() {\n        return (\n        <div id=\"main-container\"> \n            <Header />\n            <nav className=\"box\">\n                <Sidebar />\n            </nav>\n            <Switch>\n                <Route exact path=\"/\" component={Dashboard}/>\n                <Route path=\"/dashboard\" component={Dashboard}/>\n                <Route path=\"/analytics\" component={Analytics}/>\n                <Route path=\"/settings\" component={Settings}/>\n            </Switch>\n        </div>\n        );\n    }\n}\n\nMain.propTypes = {\n    spendings: PropTypes.arrayOf(PropTypes.object),\n    currency: PropTypes.string.isRequired,\n    locale: PropTypes.string.isRequired,\n    categories: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default connect(mapStateToProps)(Main);\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport { HashRouter } from 'react-router-dom';\nimport { rootReducer } from './utils/ReduxStore';\nimport Main from './Main';\nimport registerServiceWorker from './registerServiceWorker';\nimport { getSpendings, loadCurrency, loadLocale, loadCategories } from './utils/LocalStore';\nimport { Constants } from './utils/Constants';\nimport './style.scss';\n\nconst DEBUG = false;\n\nconst defaults = {\n    spendings: getSpendings() || [],\n    settings: {\n        currency: loadCurrency() || Constants.DEFAULT_CURRENCY,\n        locale: loadLocale() || Constants.DEFAULT_LOCALE,\n        categories: loadCategories() || Constants.DEFAULT_CATEGORIES\n    }\n};\n\n//  pre-load all spendings and settings into redux store\nconst store = createStore(\n  rootReducer,\n  defaults,\n  DEBUG ? applyMiddleware(logger) : undefined\n);\n\nrender((\n    <HashRouter>\n        <Provider store={store}>\n            <Main />\n        </Provider>\n    </HashRouter>\n), document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}