{"version":3,"sources":["utils/ReduxStore.js","utils/Utils.js","Header.js","utils/Constants.js","utils/LocalStore.js","utils/Contexts.js","dashboard/TooltipAmountDay.js","dashboard/Calender.js","dashboard/AddForm.js","dashboard/tiles/SpendingsSingleDay.js","dashboard/tiles/TotalSpendings.js","dashboard/tiles/CategoriesPieChart.js","dashboard/tiles/RecentHistory.js","dashboard/tiles/RecurrentSpendings.js","dashboard/Tiles.js","Dashboard.js","Analytics.js","Settings.js","Sidebar.js","Main.js","registerServiceWorker.js","index.js"],"names":["rootReducer","combineReducers","spendings","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","id","uuidv4","day","cat","amount","comment","dateAdded","Date","TEMPLATES","food","share","items","min","max","coffeeshop","household","culture","clothes","transport","gifts","Utils","filterSpendingsByDay","filter","item","isSameDay","filterSpendingsByWeek","isSameWeek","filterSpendingsByMonth","isSameMonth","filterSpendingsByYear","isSameYear","filterSpendingsByCategory","category","calculateTotalAmountByCategory","map","reduce","prevAmount","nextAmount","calculateTotalAmountsByCategories","categories","_this","this","amountByCat","value","Math","round","calculateSumOfSpendings","prev","next","dateInEachWeek","dateFrom","dateTo","dates","dateToEnd","endOfWeek","isBefore","push","addWeeks","dateInEachMonth","endOfMonth","addMonths","dateInEachYear","endOfYear","addYears","generateRandomData","count","startDate","endDate","randomSpendings","i","rand","random","catKeys","keys","accumulatedProb","j","createRandomSpending","getRandomDate","start","end","getRandomIndex","floor","getRandomAmount","index","connect","dispatch","addSpendings","props","today","someTimeAgo","subMonths","react_default","a","createElement","className","onClick","dist","Constants","LOCALE_DECIMAL_OPTIONS","style","minimumFractionDigits","maximumFractionDigits","DATE_FORMAT","DATE_FORMAT_SHORT","DATE_FORMAT_INPUT","FIRST_DAY_WEEK","TIME_UNITS","CURRENCIES","name","code","symbol","LOCALES","DEFAULT_CURRENCY_OPTIONS","currency","DEFAULT_LOCALE","DEFAULT_CURRENCY","DEFAULT_CATEGORIES","label","descr","color","KEY_SPENDINGS","getRecurrentSpendings","store","get","React","createContext","Provider","Consumer","PreferenceProvider","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateCurrency","e","setState","target","updateLocale","locale","addCategory","newVal","removeCategory","catValue","cats","set","objectSpread","children","Component","TooltipAmountDay","_ref","toLocaleString","Calender","daysWithSpendings","getDaysWithSpendings","prevProps","updateDaysWithSpendings","modifiers","getDate","dayState","top","pageY","left","pageX","defineProperty","display","date","selectedDay","spendingsMonth","forEach","spending","_this2","weekend","daysOfWeek","dayWithSpending","values","tooltips","dashboard_TooltipAmountDay","key","DayPicker_default","todayButton","firstDayOfWeek","modifiersStyles","backgroundColor","fontWeight","onDayClick","updateSelectedDay","onDayMouseEnter","mod","displayAmountSpent","onDayMouseLeave","hideAmountSpent","onMonthChange","openAddModal","openImportModal","SpendingsForm","nodeRef","createRef","valDay","initDay","valCategory","valAmount","valComment","showParsingError","document","addEventListener","handleClickOutideForm","_this3","removeEventListener","current","contains","onClose","dateFnsFormat","replace","preventDefault","parseFloat","isNaN","addSpendingsPosition","handleFormInput","_this4","styleErrorTooltip","ref","onChange","handleDay","handleCategory","border","handleAmount","maxLength","handleComment","handleFormInputAndClose","SpendingsSingleDay","catExpandedView","initStateObject","nextProps","spendingsForDay","stateExpandedView","onlyToday","updatedCatState","spendingsDay","amountSpent","arrowClass","currencyOptions","toggleDisplayAllPositionsForCat","renderSpendingsPositons","spendingPositions","displayExpanded","_this5","classes","fadeout","total","title","toggleDisplay","renderTableBody","totalToday","totalWeek","totalMonth","totalYear","chartData","data","pieColors","substring","es6","width","height","cx","cy","isAnimationActive","outerRadius","fill","labelLine","dataKey","nameKey","entry","layout","align","verticalAlign","iconType","iconSize","entries","slice","reverse","pos","RecurrentSpendings","rs","interval","tbleHead","Tiles","catPieChart","spendingsSingleDay","totalSpendings","recentHistory","recurrentSpendings","tile","setTimeout","tiles_CategoriesPieChart","t","tiles_SpendingsSingleDay","tiles_TotalSpendings","tiles_RecentHistory","tiles_RecurrentSpendings","Dashboard","addFormIsVisible","fileSelector","initFileSelector","setAttribute","onchange","handleFileUpload","newSpending","addSpending","click","files","reader","FileReader","onload","json","JSON","parse","result","onerror","err","console","log","readAsText","dashboard_Tiles","src_dashboard_Calender","dashboard_AddForm","Analytics","unit","subYears","dataTotals","updateChart","startOf","endOf","dateFormat","datesEach","eachDay","startOfDay","endOfDay","startOfWeek","startOfMonth","startOfYear","dateStart","dateEnd","getSpendingsBetween","optionsUnits","handleUnit","handleDate1","handleDate2","margin","right","bottom","strokeDasharray","Settings","curr","localeOptions","loc","categoryTbl","rowSpan","Sidebar","displayTitleDashboard","displayTitleAnalytics","displayTitleSettings","distanceTop","window","handleSidebarPosition","scrollTop","documentElement","body","stateItem","onMouseEnter","toggleNavTitle","onMouseLeave","Link","to","Main","componentUnmount","bind","spendingsArray","shouldOverwrite","newData","oldData","saveSpendings","src_Header","src_Sidebar","Contexts_PreferenceProvider","Switch","Route","exact","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","createStore","onlySameWeek","onlySameMonth","onlySameYear","weekStartsOn","getFullYear","getSpendings","render","HashRouter","es","src_Main","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fe41624f.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport uuidv4 from 'uuid/v4';\n\nconst ADD_SPENDING = 'ADD_SPENDING';\nconst ADD_SPENDINGS = 'ADD_SPENDINGS';\n\n// action creators\nexport const addSpending = (spending) => {\n    return {\n        type: ADD_SPENDING,\n        ...spending\n    };\n};\n\nexport const addSpendings = (spendings) => {\n    return {\n        type: ADD_SPENDINGS,\n        spendings\n    };\n};\n\n// reducers\nconst spendingsReducer = (state = [], action) => {\n    switch(action.type) {\n        case ADD_SPENDING : {\n            return [\n                ...state,\n                {\n                    id: action.id ? action.id : uuidv4(),\n                    day: action.day,\n                    cat: action.cat,\n                    amount: action.amount,\n                    comment: action.comment,\n                    dateAdded: action.dateAdded ? action.dateAdded : new Date()\n                }\n            ];\n        }\n        case ADD_SPENDINGS : {\n            return [\n                ...state,\n                ...action.spendings\n            ];\n        }\n        default :\n            return state;\n    }\n};\n\nexport let rootReducer = combineReducers({\n    spendings: spendingsReducer\n});","import uuidv4 from 'uuid/v4';\nimport addMonths from 'date-fns/add_months';\nimport { endOfMonth, isBefore, endOfWeek, addWeeks, endOfYear, addYears, \n    isSameDay, isSameWeek, isSameMonth, isSameYear } from 'date-fns';\n\n// Used for generating some random spendings\nconst TEMPLATES = {\n    food: { \n        share: 0.25,\n        items: [\n            { comment: 'Groceries', min: 3, max: 100 },\n            { comment: 'Drinks', min: 2, max: 30 },\n            { comment: 'Döner', min: 2.50, max: 5 }\n        ]\n    },\n    coffeeshop: { \n        share: 0.2,\n        items: [\n            { comment: 'Coffee', min: 1, max: 2.50 },\n            { comment: 'Coffee & cake', min: 4, max: 8 },\n            { comment: 'Capuccino', min: 2.50, max: 3.50 },\n            { comment: 'Drink at bar', min: 3, max: 10 }\n        ]\n    },\n    household: { \n        share: 0.2,\n        items: [\n            { comment: 'Bicycle repair', min: 50, max: 100 },\n            { comment: 'Vacuum cleaner bags', min: 5, max: 20 },\n            { comment: 'Detergents', min: 1, max: 10 },\n            { comment: 'Bed linen', min: 10, max: 50 },\n            { comment: 'Cosmetics', min: 0.5, max: 10 },\n            { comment: 'Toothbrush', min: 1, max: 3 },\n            { comment: 'Bank fees', min: 1, max: 5 }\n        ]\n    },\n    culture: { \n        share: 0.1,\n        items: [\n            { comment: 'Book', min: 2, max: 25 },\n            { comment: 'Cinema', min: 5, max: 9 },\n            { comment: 'Theater', min: 8, max: 40 },\n            { comment: 'Library membership', min: 10, max: 15 }\n        ]\n    },\n    clothes: {\n        share: 0.05,\n        items: [\n            { comment: 'Present', min: 5, max: 50 },\n            { comment: 'Donation', min: 5, max: 50 }\n        ]\n    },\n    transport: {\n        share: 0.15,\n        items: [\n            { comment: 'Public transport ticket', min: 1.30, max: 5.40 },\n            { comment: 'Train ticket', min: 5, max: 70 },\n            { comment: 'Flight', min: 30, max: 100 },\n            { comment: 'Petrol', min: 10, max: 50 }\n        ]\n    },\n    gifts: {\n        share: 0.05,\n        items: [\n            { comment: 'Present', min: 5, max: 50 },\n            { comment: 'Donation', min: 5, max: 50 }\n        ]\n    }\n};\n\nconst Utils = {\n\n    filterSpendingsByDay(spendings, day) {\n        if(!spendings || !day) {\n            return [];\n        }\n\n        return spendings.filter(item => isSameDay(new Date(item.day), day)); \n    },\n\n    filterSpendingsByWeek(spendings, day) {\n        if(!spendings || !day) {\n            return [];\n        }\n\n        return spendings.filter(item => isSameWeek(new Date(item.day), day)); \n    },\n\n    filterSpendingsByMonth(spendings, day) {\n        if(!spendings || !day) {\n            return [];\n        }\n\n        return spendings.filter(item => isSameMonth(new Date(item.day), day)); \n    },\n\n    filterSpendingsByYear(spendings, day) {\n        if(!spendings || !day) {\n            return [];\n        }\n\n        return spendings.filter(item => isSameYear(new Date(item.day), day)); \n    },\n\n    /**\n     * Filters array of spending positions by their category.\n     * @param {Array} spendings objects with spending positions\n     * @param {String} category \n     */\n    filterSpendingsByCategory(spendings, category) {\n        if(!spendings || spendings.length === 0) {\n            return [];\n        }\n        return spendings.filter(item => item.cat === category); \n    },\n\n    calculateTotalAmountByCategory(spendings, category) {\n        if(!spendings || spendings.length === 0) {\n            return 0;\n        }\n\n        return spendings.filter(item => item.cat === category)\n                        .map(item => item.amount)\n                        .reduce((prevAmount, nextAmount) => prevAmount + nextAmount, 0);  \n    },\n\n    calculateTotalAmountsByCategories(spendings, categories) {\n        if(!categories || !spendings) {\n            return [];\n        }\n\n        return categories.map(cat => {\n            let amountByCat = this.calculateTotalAmountByCategory(spendings, cat.value);\n            return {\n                cat: cat.value,\n                amount: Math.round(amountByCat)\n            };\n        });\n    },\n\n    calculateSumOfSpendings(spendings) {\n        if(!spendings || spendings.length === 0) {\n            return 0;\n        }\n        return spendings.map(item => item.amount).reduce((prev, next) => prev + next, 0);\n    },\n\n    dateInEachWeek(dateFrom, dateTo) {\n        let dates = [];\n        let dateToEnd = endOfWeek(dateTo);\n        while(isBefore(dateFrom, dateToEnd)) {\n            dates.push(dateFrom);\n            dateFrom = addWeeks(dateFrom, 1);\n        }\n        return dates;\n    },\n\n    dateInEachMonth(dateFrom, dateTo) {\n        let dates = [];\n        let dateToEnd = endOfMonth(dateTo);\n        while(isBefore(dateFrom, dateToEnd)) {\n            dates.push(dateFrom);\n            dateFrom = addMonths(dateFrom, 1);\n        }\n        return dates;\n    },\n\n    dateInEachYear(dateFrom, dateTo) {\n        let dates = [];\n        let dateToEnd = endOfYear(dateTo);\n        while(isBefore(dateFrom, dateToEnd)) {\n            dates.push(dateFrom);\n            dateFrom = addYears(dateFrom, 1);\n        }\n        return dates;\n    },\n\n    /**\n     * Generates and returns random spendings within a given time span.\n     * Currently works only with default categories!\n     * \n     * // TODO generalise code for any categories\n     * \n     * @param {Number} count number of spendings to be generated\n     * @param {Date} startDate start of time span\n     * @param {Date} endDate end of time span\n     */\n    generateRandomData(count, startDate, endDate) {\n        let randomSpendings = [];\n        for(let i = 0; i < count; i++) {\n            const rand = Math.random();\n            const catKeys = Object.keys(TEMPLATES);\n            let accumulatedProb = 0; // accumulate shares of categories\n\n            for(let j = 0; j < catKeys.length; j++) {\n                accumulatedProb += TEMPLATES[catKeys[j]].share;\n                if(rand < accumulatedProb) {\n                    // generate spending for current category\n                    randomSpendings.push(this.createRandomSpending(catKeys[j], startDate, endDate));\n                    break;\n                }   \n            }\n        }\n        return randomSpendings;\n    },\n\n    /**\n     * Calculates and returns a random date in a given time span.\n     * @param {Date} start earlierst date of time span\n     * @param {Date} end latest date of time span\n     */\n    getRandomDate(start, end) {\n        return new Date(+start + Math.random() * (end - start));\n    },\n\n    /**\n     * Generates and returns random array index \n     * (= an integer form 0 to arrray.length).\n     * @param {Number} length of array\n     */\n    getRandomIndex(length) {\n        return Math.floor(Math.random() * length);\n    },\n\n    /**\n     * Generates random decimal number between min and max.\n     * @param {Number} min \n     * @param {Number} max \n     */\n    getRandomAmount(min, max) {\n        return (Math.random() * (max - min)) + min;\n    },\n\n    createRandomSpending(category, startDate, endDate) {\n        let index = this.getRandomIndex(TEMPLATES[category].items.length);\n        let item = TEMPLATES[category].items[index];\n        return {\n            id: uuidv4(),\n            day: this.getRandomDate(startDate, endDate),\n            cat: category,\n            amount: this.getRandomAmount(TEMPLATES[category].items[index].min, TEMPLATES[category].items[index].max),\n            comment: item.comment,\n            dateAdded: new Date()\n        };\n    }\n};\n\nexport default Utils;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Box } from 'react-feather';\nimport subMonths from 'date-fns/sub_months';\nimport Utils from './utils/Utils';\nimport { addSpendings } from './utils/ReduxStore';\n\nconst mapDispatchToProps = dispatch => ({ \n    addSpendings: spendings => dispatch(addSpendings(spendings))\n});\n\nfunction Header(props) {\n    const today = new Date();\n    const someTimeAgo = subMonths(today, 3);\n    const randomSpendings = Utils.generateRandomData(150, someTimeAgo, today);\n\n    return (\n        <header>   \n            <div className=\"wrapper-generate-btn\">\n                <button id=\"generate-btn\" onClick={() => props.addSpendings(randomSpendings)}>Generate random data</button>\n            </div>\n            <Box className=\"nav-icon nav-icon\" /> \n        </header>\n    );\n}\n\nHeader.propTypes = {\n    addSpendings: PropTypes.func.isRequired\n};\n\nexport default connect(null, mapDispatchToProps)(Header);","export const Constants = {\n    LOCALE_DECIMAL_OPTIONS: { \n        style: 'decimal', \n        minimumFractionDigits: 2, \n        maximumFractionDigits: 2 \n    },\n    DATE_FORMAT: 'DD MMM YYYY',\n    DATE_FORMAT_SHORT: 'DD.MM.YYYY',\n    DATE_FORMAT_INPUT: 'YYYY-MM-DD',\n    FIRST_DAY_WEEK: 1, // 0: Sunday, 1: Monday\n    TIME_UNITS: ['day', 'week', 'month', 'year'],\n    \n    CURRENCIES: [\n        { name: 'Euro', code: 'EUR', symbol: '€' },\n        { name: 'US Dollar', code: 'USD', symbol: '$' },\n        { name: 'British Pound', code: 'GBP', symbol: '£' }\n    ],\n    LOCALES: ['de-DE', 'en-US', 'en-UK'],\n\n    DEFAULT_CURRENCY_OPTIONS: {\n        style: 'currency',\n        currency: 'EUR',\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n    },\n    DEFAULT_LOCALE: 'de-DE',\n    DEFAULT_CURRENCY: 'EUR',\n    DEFAULT_CATEGORIES: [{ label: 'Food', value: 'food', descr: '', color: '#7E6258' },\n        { label: 'Coffee Shops, Bars & Restaurants', value: 'coffeeshop', descr: '', color: '#3EAC9A' },\n        { label: 'Household', value: 'household', descr: '', color: '#AC633E' },\n        { label: 'Culture', value: 'culture', descr: '', color: '#58747E' },\n        { label: 'Clothes', value: 'clothes', descr: '', color: '#3EAC63' },\n        { label: 'Transport', value: 'transport', descr: '', color: '#7E7558' },\n        { label: 'Gifts & Donations', value: 'gifts', descr: '', color: '#AC9A3E' }]\n};\n","/**\n * Fetching data from local storage\n */\nimport uuidv4 from 'uuid/v4';\nimport store from 'store';\nimport { isSameDay, isSameWeek, isSameMonth } from 'date-fns';\nimport { Constants } from './Constants';\n\nconst KEY_SPENDINGS = 'spendings';\nconst KEY_CATEGORIES = 'categories';\nconst KEY_CURRENCY = 'currency';\nconst KEY_LOCALE = 'locale';\nconst KEY_RECURRENT_SPENDINGS = 'recurrentSpending';\n\n /**\n  * Returns spending positons from local storage that were spent \n  * on the same day / in the same year, month, or week as the reference date.\n  * If no parameter is given, all spendings will be returned.\n  * If only date is given, all spendings from the same day will be returned.\n  * \n  * @param {Date} date reference date\n  * @param {Boolean} onlySameWeek \n  * @param {Boolean} onlySameMonth \n  * @param {Boolean} onlySameYear \n  */\n export function getSpendings(date, onlySameWeek, onlySameMonth, onlySameYear) {\n    let data = store.get(KEY_SPENDINGS);\n    if(!data) { \n        return []; \n    }\n\n    if(arguments.length === 0) {\n        return data;\n    }\n\n    if(arguments.length === 1) {\n        return data.filter(item => isSameDay(new Date(item.day), date));\n    }\n\n    if(onlySameWeek === true) {\n        return data.filter(item => isSameWeek(new Date(item.day), date, { weekStartsOn: Constants.FIRST_DAY_WEEK }));\n    }\n\n    if(onlySameMonth === true) {\n        return data.filter(item => isSameMonth(new Date(item.day), date));\n    }\n\n    if(onlySameYear === true) {\n        return data.filter(item => new Date(item.day).getFullYear() === date.getFullYear());\n    }\n\n    return data;\n}\n\n/**\n * Returns spendings postions after and/or before a certain date.\n * If neither start date nor end date is specified, an empty array is returned.\n * \n * @param {Date} dateStart (optional)\n * @param {Date} dateEnd (optinal)\n * @param {String} category (optional)\n * @param {Number} count number of positions that should be returned (optional)\n */\nexport const getSpendingsBetween = (dateStart, dateEnd, category, count) => {\n    if(!dateStart && !dateEnd) { \n        return []; \n    }\n    let data = store.get(KEY_SPENDINGS);\n    if(!data) { \n        return []; \n    }\n\n    if(dateStart) {\n        data = data.filter(item => new Date(item.day) >= dateStart);\n    }\n\n    if(dateEnd) {\n        data = data.filter(item => new Date(item.day) <= dateEnd);\n    }\n\n    if(category) {\n        data = data.filter(item => item.cat === category);\n    }\n\n    return count ? data.slice(0, count) : data;\n};\n\nexport const postSpendingPosition = (pos) => {\n    let data = store.get(KEY_SPENDINGS);\n    if(!data) { \n        data = []; \n    }\n    data.push({\n        id: pos.id ? pos.id : uuidv4(),\n        day: pos.day,\n        cat: pos.cat,\n        amount: pos.amount,\n        comment: pos.comment,\n        dateAdded: pos.dateAdded ? pos.dateAdded : new Date()\n    });\n    \n    store.set(KEY_SPENDINGS, data);\n};\n\nexport const saveSpendings = (spendingsArray, shouldOverwrite) => {\n    if(!spendingsArray || spendingsArray.length === 0) {\n        return;\n    }\n\n    let newData;\n    if(shouldOverwrite) {\n        newData = spendingsArray;\n    } else {\n        let oldData = store.get(KEY_SPENDINGS) || [];\n        newData = [...oldData, ...spendingsArray];\n    }\n    store.set(KEY_SPENDINGS, newData);\n};\n\nexport const loadCurrency = () => {\n    return store.get(KEY_CURRENCY);\n};\n\nexport const saveCurrency = (currency) => {\n    store.set(KEY_CURRENCY, currency);\n};\n\nexport const loadLocale = () => {\n    return store.get(KEY_LOCALE);\n};\n\nexport const saveLocale = (locale) => {\n    store.set(KEY_LOCALE, locale);\n};\n\nexport const loadCategories = () => {\n    return store.get(KEY_CATEGORIES);\n};\n\nexport const saveCategories = (cats) => {\n    store.set(KEY_CATEGORIES, cats);\n};\n\nexport const getRecurrentSpendings = () => {\n    const recSpendings = store.get(KEY_RECURRENT_SPENDINGS);\n    if(!recSpendings) { \n        return []; \n    }\n};\n\nexport const postRecurrentSpending = (recurrentSpending) => {\n    let recSpendings = store.get(KEY_RECURRENT_SPENDINGS);\n    if(!recSpendings) { \n        recSpendings = []; \n    }\n    recSpendings.push({\n        startDate: recurrentSpending.startDate ? recurrentSpending.startDate : new Date(),\n        interval: recurrentSpending.interval,\n        amount: recurrentSpending.amount,\n        cat: recurrentSpending.cat,\n        comment: recurrentSpending.comment\n    });\n    \n    store.set(KEY_RECURRENT_SPENDINGS, recurrentSpending);\n};","import React from 'react';\nimport { loadCurrency, loadLocale, loadCategories, \n    saveCurrency, saveLocale, saveCategories } from './LocalStore';\nimport { Constants } from './Constants';\n\nconst { Provider, Consumer } = React.createContext();\n\nclass PreferenceProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currency: Constants.DEFAULT_CURRENCY,\n            locale: Constants.DEFAULT_LOCALE,\n            categories: Constants.DEFAULT_CATEGORIES\n        }\n    }\n\n    componentDidMount() {\n        // load preferences from local storage\n        this.setState({\n            currency: loadCurrency() || Constants.DEFAULT_CURRENCY,\n            locale: loadLocale() || Constants.DEFAULT_LOCALE,\n            categories: loadCategories() || Constants.DEFAULT_CATEGORIES\n        });\n    }\n\n    componentWillUnmount() {\n        saveCurrency(this.state.currency);\n        saveLocale(this.state.locale);\n        saveCategories(this.state.categories);\n    }\n\n    updateCurrency = (e) => {\n        this.setState({ currency: e.target.value });\n    }   \n\n    updateLocale = (e) => {\n        this.setState({ locale: e.target.value });\n    }  \n\n    addCategory = (newVal) => {\n        this.setState({ categories: [...this.state.categories, newVal] });\n    }\n\n    removeCategory = (catValue) => {\n        this.setState({ categories: this.state.categories.filter(cat => cat.value !== catValue) });\n    }\n\n    render() {\n        return (\n            <Provider value={{\n                ...this.state,\n                updateCurrency: this.updateCurrency,\n                updateLocale: this.updateLocale,\n                addCategory: this.addCategory,\n                removeCategory: this.removeCategory\n            }}>\n                {this.props.children} \n            </Provider>\n        );\n    }\n}\n\nexport { PreferenceProvider, Consumer as PreferenceConsumer };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Constants } from '../utils/Constants';\nimport './TooltipAmountDay.scss';\nimport { PreferenceConsumer } from '../utils/Contexts';\n\n/**\n * Displays amount spent on a day when hovering over specific day\n * in the DayPicker\n */\nfunction TooltipAmountDay(props)  {\n    return (\n        <PreferenceConsumer>\n        {({ currency, locale }) => (\n            <div className=\"hover-total-amount-day\" style={props.style}>\n                {props.amount.toLocaleString(locale, { ...Constants.DEFAULT_CURRENCY_OPTIONS, ...{ currency: currency }})}\n            </div>\n        )}\n        </PreferenceConsumer>\n    ); \n}\n\nTooltipAmountDay.propTypes = {\n    style: PropTypes.object.isRequired,\n    amount: PropTypes.number.isRequired\n};\n\nexport default TooltipAmountDay;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DayPicker from 'react-day-picker';\nimport TooltipAmountDay from './TooltipAmountDay';\nimport { Constants } from '../utils/Constants';\nimport Utils from './../utils/Utils';\nimport './Calender.scss';\nimport 'react-day-picker/lib/style.css';\n\nconst mapStateToProps = (state) => ({ spendings: state.spendings });\n\nclass Calender extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            daysWithSpendings: this.getDaysWithSpendings()\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.spendings.length !== this.props.spendings.length) {\n            // update amounts when new spending(s) are added \n            this.updateDaysWithSpendings();\n        }\n    }\n\n    displayAmountSpent(day, modifiers, e) {\n        day = day.getDate();\n        const dayState = this.state.daysWithSpendings[day];\n        if(dayState) {\n            dayState.style = { top: e.pageY, left: e.pageX-50 };\n            this.setState({ daysWithSpendings: {...this.state.daysWithSpendings, ...{ [day]: dayState } } });\n        }\n    }\n\n    hideAmountSpent(day) {\n        day = day.getDate();\n        const dayState = this.state.daysWithSpendings[day];\n        if(dayState) {\n            dayState.style = { display: 'none' };\n            this.setState({ daysWithSpendings: {...this.state.daysWithSpendings, ...{ [day]: dayState } } });\n        }\n    }\n\n    getDaysWithSpendings(date) {\n        date = date ? date : this.props.selectedDay;\n        // get all spendings of current month\n        const spendingsMonth = Utils.filterSpendingsByMonth(this.props.spendings, date);\n        // get all days on which sth. was spent in this month and add up amounts\n        const daysWithSpendings = {};\n        spendingsMonth.forEach(spending => {\n            const day = new Date(spending.day).getDate();\n            if(!daysWithSpendings[day]) {\n                daysWithSpendings[day] = { \n                    date: new Date(spending.day),\n                    amount: spending.amount,\n                    style: { display: 'none' } \n                };\n            } else {\n                daysWithSpendings[day].amount += spending.amount;\n            }\n        });\n\n        return daysWithSpendings;\n    }\n\n    updateDaysWithSpendings(date) {\n        this.setState({ daysWithSpendings: this.getDaysWithSpendings(date) });\n    }\n\n    render() {\n        const modifiers = {\n            weekend: { daysOfWeek: [6, 0] },\n            today: new Date(),\n            selectedDay: this.props.selectedDay,\n            dayWithSpending: Object.values(this.state.daysWithSpendings).map(item => item.date)\n        };\n        const modifiersStyles = {\n            today : {\n                color: '#58747E'\n            },\n            weekend: {\n                color: '#7E6258'\n            },\n            selectedDay: {\n                color: 'white',\n                backgroundColor: '#7E6258',\n            },\n            dayWithSpending: {\n                fontWeight: 'bold'\n            }\n        };\n\n\n        const tooltips = Object.keys(this.state.daysWithSpendings).map(day =>\n            (<TooltipAmountDay \n                key={day} \n                amount={this.state.daysWithSpendings[day].amount} \n                style={this.state.daysWithSpendings[day].style} \n            />)\n        );\n\n        return (\n            <div id=\"calender\" className=\"box\">\n                <DayPicker\n                    todayButton=\"Today\"\n                    firstDayOfWeek={Constants.FIRST_DAY_WEEK}\n                    modifiers={modifiers}\n                    modifiersStyles={modifiersStyles}\n                    onDayClick={this.props.updateSelectedDay}\n                    onDayMouseEnter={(day, mod, e) => this.displayAmountSpent(day, mod, e)}\n                    onDayMouseLeave={(day, mod, e) => this.hideAmountSpent(day, mod, e)} \n                    onMonthChange={(date) => this.updateDaysWithSpendings(date)}\n                />\n\n                <div>\n                    {tooltips}\n                </div>\n\n                <div className=\"box add-actions\">\n                    <span className=\"add-action\" onClick={this.props.openAddModal}>\n                        <button className=\"add-pos-btn\">+</button> \n                        Add spending\n                    </span>\n                    <span className=\"add-action\" onClick={this.props.openImportModal}>\n                        <button className=\"add-pos-btn\">+</button>\n                        Import from JSON\n                    </span>\n                </div> \n            </div>  \n        );\n    }\n}\n\nCalender.propTypes = {\n    selectedDay: PropTypes.instanceOf(Date).isRequired,\n    updateSelectedDay: PropTypes.func.isRequired,\n    openAddModal: PropTypes.func.isRequired,\n    openImportModal: PropTypes.func.isRequired,\n    spendings: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default connect(mapStateToProps)(Calender);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dateFnsFormat from 'date-fns/format';\nimport { Constants } from '../utils/Constants';\nimport './AddForm.scss';\n\nclass SpendingsForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.nodeRef = React.createRef();\n        this.state = {\n            valDay: this.initDay(),\n            valCategory: 'food',\n            valAmount: '',\n            valComment: '',\n            showParsingError: false\n        };\n    }\n\n    componentDidMount() {\n        // add event listener for clicks outside of form\n        document.addEventListener('click', (e) => this.handleClickOutideForm(e));\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', (e) => this.handleClickOutideForm(e));\n    }\n\n    handleClickOutideForm(e) {\n        if(this.nodeRef.current && !this.nodeRef.current.contains(e.target)) {\n            this.props.onClose();\n        } \n    }\n\n    initDay() {\n        if (this.props.selectedDay) {\n            return dateFnsFormat(this.props.selectedDay, Constants.DATE_FORMAT_INPUT);\n        }\n        return null;\n    }\n\n    handleDay(e) {\n        this.setState({ valDay: e.target.value });\n    }\n\n    handleCategory(e) {\n        this.setState({ valCategory: e.target.value });\n    }\n\n    handleAmount(e) {\n        this.setState({ valAmount: e.target.value.replace(',', '.') });\n    }\n\n    handleComment(e) {\n        this.setState({ valComment: e.target.value });\n    }\n\n    handleFormInput(e) {\n        e.preventDefault();\n        let amount = parseFloat(this.state.valAmount);\n        if(isNaN(amount)) {\n            this.setState({ showParsingError: true });\n        } else {\n            this.setState({ showParsingError: false });\n            this.props.addSpendingsPosition(this.state.valCategory, amount, this.state.valComment, this.state.valDay);\n        }\n        this.setState({ valComment: '', valAmount: '' });\n    }\n\n    handleFormInputAndClose(e) {\n        this.handleFormInput(e);\n        this.props.onClose();\n    }\n\n    render() {\n        let categories = this.props.categories.map((cat) => {\n            return (\n                <option key={cat.value} value={cat.value}>{cat.label}</option>\n            );\n        });\n\n        const styleErrorInput = { \n            border: 'solid 1px red',\n            backgroundColor: '#ffe6e6' \n        };\n        const styleErrorTooltip = { \n            display: this.state.showParsingError ? 'inline' : 'none'\n        };\n        const msgError = 'Please enter a correct value';\n\n        return (\n            <div id=\"add-modal\" ref={this.nodeRef}>\n                <div id=\"tooltip-error\" style={styleErrorTooltip}>{msgError}</div>\n                <button className=\"close-X\" onClick={this.props.onClose}>x</button>\n\n                <form id=\"add-form\">\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>Date: </td>\n                                <td><input type=\"date\" \n                                           value={this.state.valDay} \n                                           onChange={(e) => this.handleDay(e)} /></td>\n                            </tr>\n                            <tr>\n                                <td>Category: </td>\n                                <td><select value={this.valCategory} onChange={(e) => this.handleCategory(e)}>{categories}</select></td>\n                            </tr>\n                            <tr>\n                                <td>Amount spent: </td>\n                                <td>\n                                    <input type=\"text\" \n                                           style={this.state.showParsingError ? styleErrorInput : {}}\n                                           value={this.state.valAmount.toLocaleString(this.props.locale, Constants.LOCALE_DECIMAL_OPTIONS)} \n                                           onChange={(e) => this.handleAmount(e)} \n                                           />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Comment: </td>\n                                <td>\n                                    <input type=\"text\" \n                                           maxLength=\"150\" \n                                           value={this.state.valComment} \n                                           onChange={(e) => this.handleComment(e)} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td></td>\n                                <td>\n                                    <input type=\"submit\" onClick={(e) => this.handleFormInput(e)} value=\"Submit + Add next\"/>\n                                    <input type=\"submit\" onClick={(e) => this.handleFormInputAndClose(e)} value=\"Submit + Close\"/>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </form>\n            </div>\n        );\n    }\n}\n\nSpendingsForm.propTypes = {\n    selectedDay: PropTypes.instanceOf(Date).isRequired,\n    locale: PropTypes.string.isRequired,\n    categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n    addSpendingsPosition: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default SpendingsForm;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport dateFnsFormat from 'date-fns/format';\nimport Utils from '../../utils/Utils';\nimport { Constants } from '../../utils/Constants';\nimport './Tiles.scss';\n\nconst mapStateToProps = (state) => ({ spendings: state.spendings });\n\nclass SpendingsSingleDay extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            catExpandedView: this.initStateObject()\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // When selected day changes, only categories are displayed, \n        // single spending positions are collapsed\n        if (nextProps.spendingsForDay !== this.props.spendingsForDay) {\n            this.setState({ catExpandedView: this.initStateObject() });\n        }\n    }\n\n    initStateObject() {\n        let stateExpandedView = {};\n        this.props.categories.forEach((cat) => {\n            stateExpandedView[cat.value] = this.props.onlyToday ? true : false;\n        });\n        return stateExpandedView;\n    }\n\n    toggleDisplayAllPositionsForCat(cat) {\n        let updatedCatState = this.state.catExpandedView;\n        updatedCatState[cat] = !this.state.catExpandedView[cat];\n        this.setState({ catExpandedView: updatedCatState });\n    }\n\n    renderTableBody(spendingsDay) {\n        return this.props.categories.map((cat) => {\n            let amountSpent = Utils.calculateTotalAmountByCategory(spendingsDay, cat.value);\n            let arrowClass = amountSpent > 0 ? (this.state.catExpandedView[cat.value] ? 'arrow-up' : 'arrow-down') : '';\n            return (\n                <tbody key={cat.value}>\n                    <tr>\n                        <td>{cat.label}</td>\n                        <td className=\"cell-amount\">{amountSpent.toLocaleString(this.props.locale, this.props.currencyOptions)}</td>\n                        <td className=\"arrow\"><span className={arrowClass} onClick={() => this.toggleDisplayAllPositionsForCat(cat.value)}></span></td>\n                    </tr>\n                    {this.renderSpendingsPositons(spendingsDay, cat.value)}\n                </tbody>\n            );\n        });\n    }\n\n    renderSpendingsPositons(spendingsDay, cat) {\n        let spendingPositions = Utils.filterSpendingsByCategory(spendingsDay, cat);\n        let displayExpanded = this.state.catExpandedView[cat] ? '' : 'none';\n\n        if (spendingPositions) {\n            return spendingPositions.map((item, i) => {\n                return (\n                    <tr key={cat+i} style={{display: displayExpanded}} className=\"font-small-colored\">\n                        <td>{item.comment}</td>\n                        <td className=\"cell-amount\">{item.amount.toLocaleString(this.props.locale, this.props.currencyOptions)}</td>\n                    </tr>\n                );\n            });\n        }\n    }\n    \n    render() {\n        let classes = this.props.fadeout ? 'tile fade-out' : 'tile';\n        const day = this.props.onlyToday ? new Date() : this.props.selectedDay;\n        const spendingsForDay = Utils.filterSpendingsByDay(this.props.spendings, day);\n        const total = Utils.calculateSumOfSpendings(spendingsForDay);\n        const title = this.props.onlyToday ? 'Today\\'s Spendings' : 'Spendings on ' + dateFnsFormat(this.props.selectedDay, Constants.DATE_FORMAT);\n        return( \n            <div className={classes}>\n                <button className=\"close-tile\" title=\"Close\" onClick={() => this.props.toggleDisplay('spendingsSingleDay')}>\n                    x\n                </button>\n                <h4>{title}</h4>\n                <table className=\"table-spendings\">  \n                    {this.renderTableBody(spendingsForDay)}    \n                    <tfoot>\n                        <tr>\n                            <td><b>Total</b></td>\n                            <td className=\"cell-amount\"><b>{total.toLocaleString(this.props.locale, this.props.currencyOptions)}</b></td>\n                        </tr>\n                    </tfoot>      \n                </table>\n            </div>\n        ); \n    }\n}\n\nSpendingsSingleDay.propTypes = {\n    selectedDay: PropTypes.instanceOf(Date),\n    locale: PropTypes.string.isRequired,\n    currencyOptions: PropTypes.object.isRequired,\n    totalAmountDay: PropTypes.number,\n    spendingsForDay: PropTypes.arrayOf(PropTypes.object),\n    categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n    toggleDisplay: PropTypes.func.isRequired,\n    onlyToday: PropTypes.bool.isRequired,\n    fadeout: PropTypes.bool.isRequired,\n    spendings: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default connect(mapStateToProps)(SpendingsSingleDay);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Utils from '../../utils/Utils';\nimport './Tiles.scss';\n\nconst mapStateToProps = (state) => ({ spendings: state.spendings });\n\n/**\n * Shows total spendings of today, current week, month & year.\n */\nfunction TotalSpendings(props) {\n    let classes = props.fadeout ? 'tile fade-out' : 'tile';\n    const today = new Date();\n    const totalToday = Utils.calculateSumOfSpendings(Utils.filterSpendingsByDay(props.spendings, today));\n    const totalWeek = Utils.calculateSumOfSpendings(Utils.filterSpendingsByWeek(props.spendings, today));\n    const totalMonth = Utils.calculateSumOfSpendings(Utils.filterSpendingsByMonth(props.spendings, today));\n    const totalYear = Utils.calculateSumOfSpendings(Utils.filterSpendingsByYear(props.spendings, today));\n    return (\n        <div className={classes}>\n            <button className=\"close-tile\" title=\"Close\" onClick={() => props.toggleDisplay('totalSpendings')}>\n                x\n            </button>\n            <h4>Total Spendings</h4>\n            <table className=\"table-spendings\">\n                <tbody>\n                    <tr>\n                        <td>Today:</td>\n                        <td className=\"cell-amount\">{totalToday.toLocaleString(props.locale, props.currencyOptions)}</td>\n                    </tr>\n                    <tr>\n                        <td>This week:</td>\n                        <td className=\"cell-amount\">{totalWeek.toLocaleString(props.locale, props.currencyOptions)}</td>\n                    </tr>\n                    <tr>\n                        <td>This month:</td>\n                        <td className=\"cell-amount\">{totalMonth.toLocaleString(props.locale, props.currencyOptions)}</td>\n                    </tr>\n                    <tr>\n                        <td>This year:</td>\n                        <td className=\"cell-amount\">{totalYear.toLocaleString(props.locale, props.currencyOptions)}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nTotalSpendings.propTypes = {\n    locale: PropTypes.string.isRequired,\n    currencyOptions: PropTypes.object.isRequired,\n    toggleDisplay: PropTypes.func.isRequired,\n    fadeout: PropTypes.bool.isRequired,\n    spendings: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default connect(mapStateToProps)(TotalSpendings);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { PieChart, Pie, Legend, Cell } from 'recharts';\nimport Utils from '../../utils/Utils';\nimport './Tiles.scss';\n\nconst mapStateToProps = (state) => ({ spendings: state.spendings });\n\nfunction CategoriesPieChart(props) {\n    const data = Utils.calculateTotalAmountsByCategories(props.spendings, props.categories);\n    let pieColors = [];\n    let chartData;\n\n    if(!data || data.length === 0) {\n        pieColors.push('#f1f4f4');\n        chartData = [{\n            name: 'No data available',\n            value: 1\n        }];\n    } else {\n        chartData = props.categories.map((cat, i) => {\n        pieColors.push(cat.color);\n        return { \n            name: cat.label.length <= 20 ? cat.label : cat.label.substring(0, 18) + '...',\n            value: data[i].amount };\n        });\n    }\n    let classes = props.fadeout ? 'tile fade-out' : 'tile';\n    return (\n        <div className={classes}>\n            <button className=\"close-tile\" title=\"Close\" onClick={() => props.toggleDisplay('catPieChart')}>\n                x\n            </button>\n            <h4>Spendings on Categories</h4>\n            <div id=\"piechart\">\n                <PieChart width={400} height={150}>\n                    <Pie cx={100} cy={70} isAnimationActive={true} data={chartData} outerRadius={65} fill=\"#58747E\" \n                        labelLine={false} label={false} dataKey=\"value\" nameKey=\"name\">\n                        {\n                            chartData.map((entry, i) => <Cell fill={pieColors[i]} key={i}/>)\n                        }\n                    </Pie>   \n                    <Legend layout=\"vertical\" align=\"right\" verticalAlign=\"top\" width={190} iconType=\"square\" iconSize={12}/>\n                </PieChart>  \n            </div>\n        </div>\n    );\n}\n\nCategoriesPieChart.propTypes = {\n    toggleDisplay: PropTypes.func.isRequired,\n    categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n    fadeout: PropTypes.bool.isRequired,\n    spendings: PropTypes.arrayOf(PropTypes.object)\n};\n\n\nexport default connect(mapStateToProps)(CategoriesPieChart);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport dateFnsFormat from 'date-fns/format';\nimport { Constants } from '../../utils/Constants';\nimport './Tiles.scss';\n\nconst mapStateToProps = (state) => ({ spendings: state.spendings });\n\nfunction RecentHistory(props) {\n    const entries = props.spendings.slice(-15).reverse().map((pos, i) => {\n        return (\n            <tr key={i}> \n                <td className=\"align-left\">{dateFnsFormat(pos.day, Constants.DATE_FORMAT_SHORT)}</td>\n                <td>{pos.comment.length < 28 ? pos.comment : pos.comment.substring(0, 25) + '...'}</td>\n                <td className=\"font-small-colored align-right\">\n                    {pos.amount.toLocaleString(props.locale, props.currencyOptions)}\n                </td>\n            </tr>\n        );\n    });\n\n    let classes = props.fadeout ? 'tile fade-out' : 'tile';\n    return (\n        <div className={classes}>\n            <button className=\"close-tile\" title=\"Close\" onClick={() => props.toggleDisplay('recentHistory')}>\n                x\n            </button>\n            <h4>Recently Added Spendings</h4>\n            <table className=\"table-spendings-history\">\n                <tbody>\n                    {entries}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nRecentHistory.propTypes = {\n    locale: PropTypes.string.isRequired,\n    currencyOptions: PropTypes.object.isRequired,\n    spendings: PropTypes.arrayOf(PropTypes.object),\n    toggleDisplay: PropTypes.func.isRequired,\n    fadeout: PropTypes.bool.isRequired\n};\n\nexport default connect(mapStateToProps)(RecentHistory);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dateFnsFormat from 'date-fns/format';\nimport { Constants } from '../../utils/Constants';\nimport { getRecurrentSpendings } from '../../utils/LocalStore';\nimport './Tiles.scss';\n\nfunction RecurrentSpendings(props) {\n    const recurrentSp = getRecurrentSpendings();\n    const entries = recurrentSp.map((rs, i) => {\n        return (\n            <tr key={i}> \n                <td className=\"align-left\">{dateFnsFormat(rs.startDate, Constants.DATE_FORMAT_SHORT)}</td>\n                <td>{rs.interval}</td>\n                <td>{rs.comment.length < 28 ? rs.comment : rs.comment.substring(0, 25) + '...'}</td>\n                <td className=\"font-small-colored align-right\">\n                    {rs.amount.toLocaleString(props.locale, props.currencyOptions)}\n                </td>\n            </tr>\n        );\n    });\n\n    const tbleHead = entries.length > 0 ? \n                        (<tr>\n                            <td> Since </td>\n                            <td> Interval </td>\n                            <td> Description </td>\n                            <td> Amount </td>\n                        </tr>) \n                        : <tr><td>No recurrent spendings found</td></tr>;\n\n    let classes = props.fadeout ? 'tile fade-out' : 'tile';\n    return (\n        <div className={classes}>\n            <button className=\"close-tile\" title=\"Close\" onClick={() => props.toggleDisplay('recurrentSpendings')}>\n                x\n            </button>\n            <h4>Recurrent Spendings</h4>\n            <table className=\"table-spendings-history\">\n                <thead>\n                    {tbleHead}\n                </thead>\n                <tbody>\n                    {entries}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nRecurrentSpendings.propTypes = {\n    locale: PropTypes.string.isRequired,\n    currencyOptions: PropTypes.object.isRequired,\n    toggleDisplay: PropTypes.func.isRequired,\n    fadeout: PropTypes.bool.isRequired\n};\n\nexport default RecurrentSpendings;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SpendingsSingleDay from './tiles/SpendingsSingleDay';\nimport TotalSpendings from './tiles/TotalSpendings';\nimport CategoriesPieChart from './tiles/CategoriesPieChart';\nimport RecentHistory from './tiles/RecentHistory';\nimport RecurrentSpendings from './tiles/RecurrentSpendings';\nimport { PreferenceConsumer } from '../utils/Contexts';\nimport { Constants } from '../utils/Constants';\nimport './tiles/Tiles.scss';\n\nclass Tiles extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            display : {\n                catPieChart: true,\n                spendingsSingleDay: true,\n                totalSpendings: true,\n                recentHistory: true,\n                recurrentSpendings: true\n            },\n            fadeout: {\n                catPieChart: false,\n                spendingsSingleDay: false,\n                totalSpendings: false,\n                recentHistory: false,\n                recurrentSpendings: false\n            }\n        };\n    }\n\n    toggleDisplay(tile) {\n        this.setState({ fadeout: {...this.state.fadeout, ...{[tile] : !this.state.fadeout[tile]} } });\n        setTimeout(() => {\n            this.setState({ display: {...this.state.display, ...{[tile] : !this.state.display[tile]} } });\n        }, 500);\n    }\n\n    render() {\n        return (\n            <PreferenceConsumer>\n            {({currency, locale, categories}) => {\n                let currencyOptions = { ...Constants.DEFAULT_CURRENCY_OPTIONS, ...{ currency: currency }};\n\n                return (\n                    <div id=\"tiles\" className=\"box\">\n                        {this.state.display.catPieChart && \n                            <CategoriesPieChart \n                                toggleDisplay={(t) => this.toggleDisplay(t)}\n                                categories={categories}\n                                fadeout={this.state.fadeout.catPieChart}\n                            />\n                        }\n\n                        {this.state.display.spendingsSingleDay &&\n                            <SpendingsSingleDay\n                                toggleDisplay={(t) => this.toggleDisplay(t)}\n                                locale={locale}\n                                currencyOptions={currencyOptions}\n                                categories={categories}\n                                fadeout={this.state.fadeout.spendingsSingleDay}\n\n                                onlyToday={true}\n                            />\n                        }  \n        \n                        {this.state.display.totalSpendings &&\n                            <TotalSpendings \n                                toggleDisplay={(t) => this.toggleDisplay(t)}\n                                locale={locale}\n                                currencyOptions={currencyOptions}\n                                fadeout={this.state.fadeout.totalSpendings}\n                            />\n                        }\n        \n                        {this.state.display.recentHistory &&\n                            <RecentHistory \n                                toggleDisplay={(t) => this.toggleDisplay(t)}\n                                locale={locale}\n                                currencyOptions={currencyOptions}\n                                fadeout={this.state.fadeout.recentHistory}\n                            />\n                        }\n        \n                        {this.state.display.spendingsSingleDay &&\n                            <SpendingsSingleDay\n                                toggleDisplay={(t) => this.toggleDisplay(t)}\n                                locale={locale}\n                                currencyOptions={currencyOptions}\n                                categories={categories}\n                                fadeout={this.state.fadeout.spendingsSingleDay}\n\n                                onlyToday={false}\n                                selectedDay={this.props.selectedDay}\n                            />\n                        }  \n        \n                        {this.state.display.recurrentSpendings &&\n                            <RecurrentSpendings \n                                toggleDisplay={(t) => this.toggleDisplay(t)}\n                                locale={locale}\n                                currencyOptions={currencyOptions}\n                                fadeout={this.state.fadeout.recurrentSpendings}\n                            />\n                        } \n                    </div>\n                );\n            }}\n            </PreferenceConsumer>\n            \n        );\n    }\n\n}\n\nTiles.propTypes = {\n    selectedDay: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Tiles;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport uuidv4 from 'uuid/v4';\nimport Calender from './dashboard/Calender';\nimport AddForm from './dashboard/AddForm';\nimport Tiles from './dashboard/Tiles';\nimport { addSpending } from './utils/ReduxStore';\nimport { PreferenceConsumer } from './utils/Contexts';\nimport './dashboard/Dashboard.scss';\n\nconst mapDispatchToProps = dispatch => ({ \n    addSpending: spending => dispatch(addSpending(spending))\n});\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedDay: new Date(),\n            addFormIsVisible: false\n        };\n    }\n\n    componentDidMount() {\n        this.fileSelector = this.initFileSelector();\n    }\n\n    initFileSelector() {\n        const fileSelector = document.createElement('input');\n        fileSelector.setAttribute('type', 'file');\n        fileSelector.setAttribute('multiple', true);\n        fileSelector.onchange = this.handleFileUpload;\n        return fileSelector;\n    }\n\n    updateSelectedDay(day) {\n        this.setState({ selectedDay: day });\n    }\n\n    addSpendingsPosition(cat, amount, comment, day) {\n        const date = day ? new Date(day) : this.state.selectedDay;\n        const newSpending = {\n            id: uuidv4(),\n            day: date,\n            cat: cat,\n            amount: amount,\n            comment: comment\n        };\n        this.props.addSpending(newSpending);\n    }\n\n    openAddModal() {\n        this.setState({ addFormIsVisible: true });\n    }\n\n    openImportModal(e) {\n        e.preventDefault();\n        this.fileSelector.click();\n    }\n\n    handleFileUpload(e) {\n        e.preventDefault();\n        let files = e.target.files;\n        if(!files) {\n            console.log('No files to upload found');\n            return;\n        }\n\n        for(let i = 0; i < files.length; i++) {\n             if(files[i].type === 'application/json') {\n                 let reader = new FileReader();\n\n                 reader.onload = () => {\n                    let json = JSON.parse(reader.result);\n                    if(json && json.data) {\n                        json.data.forEach((item) => {\n                            this.addSpendingsPosition(item.cat, item.amount, item.comment, new Date(item.day));\n                        });\n                    } \n                 };\n\n                 reader.onerror = (err) => {\n                    console.log('error while reading file: ' + err); // TODO Display error msg\n                 };\n                 reader.readAsText(files[i]);\n             } else {\n                console.log('Error: File is not a JSON document...');\n                // TODO Display error msg\n            }\n        }\n    }\n\n    onClose() {\n        this.setState({\n            addFormIsVisible: false\n        });\n    }\n\n    render() {\n        return (\n            <div id=\"dashboard\" className=\"box\">\n                    <Tiles \n                        selectedDay={this.state.selectedDay}\n                    />\n\n                    <Calender\n                        selectedDay={this.state.selectedDay}\n                        updateSelectedDay={(day) => this.updateSelectedDay(day)}\n                        openAddModal={() => this.openAddModal()}  \n                        openImportModal={(e) => this.openImportModal(e)}  \n                    />\n\n                    {this.state.addFormIsVisible &&\n                        <PreferenceConsumer>\n                            {({locale, categories}) => (\n                                <AddForm \n                                    selectedDay={this.state.selectedDay}\n                                    addSpendingsPosition={(cat, amount, comment, day) => this.addSpendingsPosition(cat, amount, comment, day)} \n                                    onClose={() => this.onClose()}\n                                    locale={locale}\n                                    categories={categories}\n                                /> \n                            )}\n                        </PreferenceConsumer>\n                        \n                    }\n                \n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    addSpending: PropTypes.func.isRequired\n};\n\nexport default connect(null, mapDispatchToProps)(Dashboard);","import React, { Component } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid } from 'recharts';\nimport subYears from 'date-fns/sub_years';\nimport startOfDay from 'date-fns/start_of_day';\nimport startOfWeek from 'date-fns/start_of_week';\nimport startOfMonth from 'date-fns/start_of_month';\nimport startOfYear from 'date-fns/start_of_year';\nimport endOfDay from 'date-fns/end_of_day';\nimport endOfWeek from 'date-fns/end_of_week';\nimport endOfMonth from 'date-fns/end_of_month';\nimport endOfYear from 'date-fns/end_of_year';\nimport eachDay from 'date-fns/each_day';\nimport dateFnsFormat from 'date-fns/format';\nimport { Constants } from './utils/Constants';\nimport { PreferenceConsumer } from './utils/Contexts';\nimport { getSpendingsBetween} from './utils/LocalStore';\nimport Utils from './utils/Utils';\n\nconst FORMAT_DAY = 'DD.MM.';\nconst FORMAT_WEEK = 'W';\nconst FORMAT_MONTH = 'MMM';\nconst FORMAT_YEAR = 'YYYY';\n\nclass Analytics extends Component {\n    constructor(props) {\n        super(props);\n        const today = new Date();\n        this.state = {\n            unit: 'month',\n            category: 'all',\n            dateFrom: dateFnsFormat(subYears(today, 1), Constants.DATE_FORMAT_INPUT),\n            dateTo: dateFnsFormat(today, Constants.DATE_FORMAT_INPUT),\n            dataTotals: []\n        };\n    }\n\n    componentDidMount() {\n        this.updateChart();\n    }\n\n    handleUnit(e) {\n        this.setState({ unit: e.target.value });\n    }\n\n    handleCategory(e) {\n        this.setState({ category: e.target.value });\n    }\n\n    handleDate1(e) {\n        this.setState({ dateFrom: e.target.value });\n    }\n\n    handleDate2(e) {\n        this.setState({ dateTo: e.target.value });\n    }\n\n    updateChart() {\n        let datesEach = [];\n        let startOf, endOf, dateFormat;\n\n        if(this.state.unit === 'day') {\n            datesEach = eachDay(this.state.dateFrom, this.state.dateTo);\n            startOf = startOfDay;\n            endOf = endOfDay;\n            dateFormat = FORMAT_DAY;\n        }\n        else if(this.state.unit === 'week') {\n            datesEach = Utils.dateInEachWeek(this.state.dateFrom, this.state.dateTo);\n            startOf = startOfWeek;\n            endOf = endOfWeek;\n            dateFormat = FORMAT_WEEK;\n        }\n        else if(this.state.unit === 'month') {\n            datesEach = Utils.dateInEachMonth(this.state.dateFrom, this.state.dateTo);\n            startOf = startOfMonth;\n            endOf = endOfMonth;\n            dateFormat = FORMAT_MONTH;\n        }\n        else if(this.state.unit === 'year') {\n            datesEach = Utils.dateInEachYear(this.state.dateFrom, this.state.dateTo);\n            startOf = startOfYear;\n            endOf = endOfYear;\n            dateFormat = FORMAT_YEAR;\n        }\n\n        let data = datesEach.map(date => {\n            const cat = this.state.category === 'all' ? undefined : this.state.category;\n            const spendings = getSpendingsBetween(startOf(date), endOf(date), cat);\n            const total = Utils.calculateSumOfSpendings(spendings);\n            return {\n                name: dateFnsFormat(date, dateFormat),\n                value: total\n            };\n        });\n        \n        this.setState({ dataTotals: data });\n    }\n\n    render() {\n        const optionsUnits = Constants.TIME_UNITS.map(unit => (<option key={unit} value={unit}>{unit}</option>));\n        return (\n            <div id=\"analytics\" className=\"box\">\n                <h1 className=\"menu-item-headline\">Analytics</h1>\n\n                <div className=\"border-dashed scroll-x-axis\">\n                    <h4>Totals</h4>\n                    <div className=\"setup\">\n                        <div>Unit:&nbsp;\n                            <select value={this.state.unit} onChange={(e) => this.handleUnit(e)}>{optionsUnits}</select>\n                        </div>\n                        <div>\n                            Time span:&nbsp;\n                            <input type=\"date\" value={this.state.dateFrom} onChange={(e) => this.handleDate1(e)}/>&nbsp;\n                            <input type=\"date\" value={this.state.dateTo} onChange={(e) => this.handleDate2(e)}/>\n                        </div>\n                        <div>Categories:&nbsp;\n                            <select value={this.state.category} onChange={(e) => this.handleCategory(e)}>\n                                <option value=\"all\">All</option>\n                                <PreferenceConsumer>\n                                    {({categories}) => {\n                                        const optionsCats = categories.map((cat) => \n                                                <option key={cat.value} value={cat.value}>{cat.label}</option>);\n                                        return (optionsCats);\n                                    }}\n                                </PreferenceConsumer>\n                            </select>\n                        </div>\n                        <div>\n                            <button onClick={() => this.updateChart()}>Update chart</button>\n                        </div>\n                    </div>\n                    <div className=\"chart\">\n                        <BarChart width={1000} height={300} data={this.state.dataTotals} margin={{top: 30, right: 30, left: 20, bottom: 5}}>\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\n                            <XAxis dataKey=\"name\"/>\n                            <YAxis/>\n                            <Bar dataKey=\"value\" fill=\"#7E6258\" />\n                        </BarChart>\n                    </div>\n                </div>\n                <div className=\"border-dashed\">\n                    <h4>Averages</h4>\n                    TODO\n                </div>\n                <div className=\"border-dashed\">\n                    <h4>Comparisons</h4>\n                    TODO\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Analytics;","import React from 'react';\nimport { Constants } from './utils/Constants';\nimport { PreferenceConsumer } from './utils/Contexts';\nimport './settings/TilesSettings.scss';\n\n\n\nfunction Settings() {\n    let currencyOptions = Constants.CURRENCIES.map(curr => \n        (<option key={curr.code} value={curr.code}>{curr.name} ({curr.symbol})</option>));\n\n    let localeOptions = Constants.LOCALES.map(loc => (<option key={loc} value={loc}>{loc}</option>));\n\n    return (\n        <div id=\"settings\" className=\"box\">\n            <h1 className=\"menu-item-headline\">Settings</h1>\n                <div className=\"border-dashed\">\n                    <h4>Preferences</h4>\n                    <table>\n                        <PreferenceConsumer>\n                        {({currency, locale, categories, updateCurrency, updateLocale, addCategory, removeCategory}) => \n                        {\n                             // TODO bug: does not re-render when provider value updates\n                            let categoryTbl = categories.map(cat => (\n                                <tr className=\"reducedPadding\" key={cat.value}>\n                                    <td><span className=\"font-small-colored\">{cat.label}</span></td>\n                                    <td><button className=\"btnDelete\" title=\"Delete\" onClick={() => removeCategory(cat.value)}>X</button></td>\n                                </tr>));\n\n                            return (\n                                <tbody>\n                                    <tr>\n                                        <td className=\"prefTitle\">Currency</td>\n                                        <td><span className=\"font-small-colored\">{currency}</span></td>\n                                        <td>\n                                            Update: <select value={currency} onChange={(e) => updateCurrency(e)}>{currencyOptions}</select>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"prefTitle\">Locale</td>\n                                        <td><span className=\"font-small-colored\">{locale}</span></td>\n                                        <td>\n                                            Update: <select value={locale} onChange={(e) => updateLocale(e)}>{localeOptions}</select>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"prefTitle\" rowSpan={categoryTbl.length + 1}>Categories</td>\n                                    </tr>\n                                    {categoryTbl}\n                                </tbody>\n                            );\n                        }}\n                        </PreferenceConsumer>\n                    </table> \n                </div>\n                <div className=\"border-dashed\">\n                    <h4>Recurrent Spendings</h4>\n                </div>\n        </div>\n    );\n}\n\nexport default Settings;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Home, BarChart2, Settings } from 'react-feather';\nimport './style.scss';\n\nclass Sidebar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayTitleDashboard: false,\n            displayTitleAnalytics: false,\n            displayTitleSettings: false,\n            distanceTop: 55\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', () => this.handleSidebarPosition());\n    }\n\n    handleSidebarPosition() {\n        let scrollTop = (document.documentElement.scrollTop || document.body.scrollTop);\n        this.setState({ distanceTop: Math.max(55 - scrollTop, 0) });\n    }\n\n    toggleNavTitle(stateItem) {\n        this.setState({ [stateItem]: !this.state[stateItem] });\n    }\n\n    render() {\n        return(\n            <div id=\"sidebar\" style={{top: this.state.distanceTop}}>\n                <ul>\n                    <li onMouseEnter={() => this.toggleNavTitle('displayTitleDashboard')}\n                        onMouseLeave={() => this.toggleNavTitle('displayTitleDashboard')} >\n                        <Link to=\"/dashboard\">\n                            <Home \n                                width=\"27\"\n                                height=\"27\"\n                                className=\"nav-icon\"\n                            />\n                            <span className={this.state.displayTitleDashboard ? '' : 'hidden'}>Dashboard</span>               \n                        </Link>   \n                    </li> \n\n                    \n                    <li onMouseEnter={() => this.toggleNavTitle('displayTitleAnalytics')}\n                        onMouseLeave={() => this.toggleNavTitle('displayTitleAnalytics')} >\n                        <Link to=\"/analytics\">\n                            <BarChart2 \n                                width=\"27\"\n                                height=\"27\"\n                                className=\"nav-icon\"\n                            />\n                            <span className={this.state.displayTitleAnalytics ? '' : 'hidden'}>Analytics</span>\n                        </Link>\n                    </li>\n\n                    <li onMouseEnter={() => this.toggleNavTitle('displayTitleSettings')}\n                        onMouseLeave={() => this.toggleNavTitle('displayTitleSettings')} >\n                        <Link to=\"/settings\">\n                            <Settings \n                                width=\"27\"\n                                height=\"27\"\n                                className=\"nav-icon\"\n                            />\n                            <span className={this.state.displayTitleSettings ? '' : 'hidden'}>Settings</span>\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Dashboard from './Dashboard';\nimport Analytics from './Analytics';\nimport Settings from './Settings';\nimport Sidebar from './Sidebar';\nimport { PreferenceProvider } from './utils/Contexts';\nimport { saveSpendings } from './utils/LocalStore';\nimport './style.scss';\n\nconst mapStateToProps = (state) => ({ spendings: state.spendings });\n\nclass Main extends Component {\n\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.componentUnmount.bind(this));\n    }\n\n    componentWillUnmount() {\n        this.componentUnmount();\n        window.removeEventListener('beforeunload', this.componentUnmount.bind(this));\n    }\n\n    componentUnmount() {\n        // save spendings from redux store to local storage when closing or reloading the page\n        saveSpendings(this.props.spendings, true);\n    }\n\n    render() {\n        return (\n        <div id=\"main-container\"> \n            <Header />\n            <nav className=\"box\">\n                <Sidebar />\n            </nav>\n            <PreferenceProvider>\n                <Switch>\n                    <Route exact path=\"/\" component={Dashboard}/>\n                    <Route path=\"/dashboard\" component={Dashboard}/>\n                    <Route path=\"/analytics\" component={Analytics}/>\n                    <Route path=\"/settings\" component={Settings}/>\n                </Switch>\n            </PreferenceProvider>\n        </div>\n        );\n    }\n}\n\nMain.propTypes = {\n    spendings: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default connect(mapStateToProps)(Main);\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport { HashRouter } from 'react-router-dom';\nimport { rootReducer } from './utils/ReduxStore';\nimport Main from './Main';\nimport registerServiceWorker from './registerServiceWorker';\nimport { getSpendings } from './utils/LocalStore';\nimport './style.scss';\n\nconst DEBUG = false;\n\n//  pre-load all spenings into redux store\nconst store = createStore(\n  rootReducer,\n  { spendings: getSpendings() || [] },\n  DEBUG ? applyMiddleware(logger) : undefined\n);\n\nrender((\n        <HashRouter>\n            <Provider store={store}>\n                <Main />\n            </Provider>\n        </HashRouter>\n    ), document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}